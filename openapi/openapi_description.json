{
    "openapi": "3.0.3",
    "info": {
        "title": "GRR Rapid Response API",
        "description": "GRR Rapid Response is an incident response framework focused on remote live forensics.",
        "contact": {
            "name": "GRR GitHub Repository",
            "url": "https://github.com/google/grr"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "3.4.2.0"
    },
    "servers": [
        {
            "url": "/",
            "description": "Root path of the GRR API"
        }
    ],
    "components": {
        "schemas": {
            "grr.ApiGetLastClientIPAddressResult.Status": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == UNKNOWN\n1 == INTERNAL\n2 == EXTERNAL\n3 == VPN"
            },
            "grr.ApiListFlowRequestsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlowRequest"
                        }
                    }
                }
            },
            "grr.ApiListHuntClientsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHuntClient"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.Uname": {
                "type": "object",
                "properties": {
                    "system": {
                        "type": "string"
                    },
                    "node": {
                        "type": "string"
                    },
                    "release": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "machine": {
                        "type": "string"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "fqdn": {
                        "type": "string"
                    },
                    "install_date": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "libc_ver": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "pep425tag": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFileDetailsResult": {
                "type": "object",
                "properties": {
                    "file": {
                        "$ref": "#/components/schemas/grr.ApiFile"
                    }
                }
            },
            "grr.BlobArray": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.DataBlob"
                        }
                    }
                }
            },
            "grr.ApiListFlowResultsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlowResult"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListHuntsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "description_contains": {
                        "type": "string"
                    },
                    "active_within": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiUploadYaraSignatureResult": {
                "type": "object",
                "properties": {
                    "blob_id": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiVerifyAccessResult": {
                "type": "object",
                "properties": {}
            },
            "grr.ApiModifyHuntArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiHunt.State"
                    },
                    "client_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_rate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DEPRECATED_expires": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiGetFlowResultsExportCommandArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiHuntClient": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.DataBlob.CompressionType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == UNCOMPRESSED\n1 == ZCOMPRESSION"
            },
            "grr.ApiGetCronJobApprovalArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanLabelClientRule": {
                "type": "object",
                "properties": {
                    "label_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "match_mode": {
                        "$ref": "#/components/schemas/grr.ForemanLabelClientRule.MatchMode"
                    }
                }
            },
            "grr.ApiConfigOption": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "is_redacted": {
                        "type": "boolean"
                    },
                    "value": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "type": {
                        "type": "string"
                    },
                    "is_invalid": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiNotificationClientApprovalReference": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListAndResetUserNotificationsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.EmbeddedRDFValue": {
                "type": "object",
                "properties": {
                    "embedded_age": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiUpdateVfsFileContentArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanIntegerClientRule.ForemanIntegerField": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "description": "0 == UNSET\n1 == INSTALL_TIME\n2 == CLIENT_VERSION\n3 == LAST_BOOT_TIME\n4 == CLIENT_CLOCK"
            },
            "grr.ApiReportDataPoint1D": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "float"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "grr.CronJobAction.ActionType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNSET\n1 == SYSTEM_CRON_ACTION\n2 == HUNT_CRON_ACTION"
            },
            "grr.ApiCreateFlowArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow": {
                        "$ref": "#/components/schemas/grr.ApiFlow"
                    },
                    "original_flow": {
                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                    }
                }
            },
            "grr.ApiListHuntResultsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetPendingUserNotificationsCountResult": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListHuntCrashesArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetHuntFilesArchiveArgs.ArchiveFormat": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == ZIP\n1 == TAR_GZ"
            },
            "grr.ApiGetFileVersionTimesArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                }
            },
            "grr.OutputPluginBatchProcessingStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/grr.OutputPluginBatchProcessingStatus.Status"
                    },
                    "plugin_descriptor": {
                        "$ref": "#/components/schemas/grr.OutputPluginDescriptor"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "batch_index": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "batch_size": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiMethod": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "doc": {
                        "type": "string"
                    },
                    "http_route": {
                        "type": "string"
                    },
                    "http_methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "args_type_descriptor": {
                        "$ref": "#/components/schemas/grr.ApiRDFValueDescriptor"
                    },
                    "result_kind": {
                        "$ref": "#/components/schemas/grr.ApiMethod.ResultKind"
                    },
                    "result_type_descriptor": {
                        "$ref": "#/components/schemas/grr.ApiRDFValueDescriptor"
                    }
                }
            },
            "grr.ApiListApproverSuggestionsArgs": {
                "type": "object",
                "properties": {
                    "username_query": {
                        "type": "string"
                    }
                }
            },
            "grr.AuditEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user": {
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/grr.AuditEvent.Action"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_args": {
                        "type": "string",
                        "format": "binary"
                    },
                    "client": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "description": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiReportTickSpecifier": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "float"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetConfigOptionArgs": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetVfsRefreshOperationStateResult.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == RUNNING\n1 == FINISHED"
            },
            "grr.UnixVolume": {
                "type": "object",
                "properties": {
                    "mount_point": {
                        "type": "string"
                    },
                    "options": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanClientRule": {
                "type": "object",
                "properties": {
                    "rule_type": {
                        "$ref": "#/components/schemas/grr.ForemanClientRule.Type"
                    },
                    "os": {
                        "$ref": "#/components/schemas/grr.ForemanOsClientRule"
                    },
                    "label": {
                        "$ref": "#/components/schemas/grr.ForemanLabelClientRule"
                    },
                    "regex": {
                        "$ref": "#/components/schemas/grr.ForemanRegexClientRule"
                    },
                    "integer": {
                        "$ref": "#/components/schemas/grr.ForemanIntegerClientRule"
                    }
                }
            },
            "grr.ApiListKbFieldsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiGetCollectedHuntTimelinesArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFileDecodersResult": {
                "type": "object",
                "properties": {
                    "decoder_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiAff4ObjectAttribute": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiAff4ObjectAttributeValue"
                        }
                    }
                }
            },
            "grr.ApiDeletePendingUserNotificationArgs": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiListHuntOutputPluginLogsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginBatchProcessingStatus"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiDeleteArtifactsArgs": {
                "type": "object",
                "properties": {
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiAff4ObjectType": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiAff4ObjectAttribute"
                        }
                    }
                }
            },
            "grr.ApiNotificationReference.Type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    14,
                    3,
                    4,
                    5,
                    6,
                    10,
                    11,
                    12,
                    13
                ],
                "description": "0 == UNSET\n14 == CLIENT\n3 == HUNT\n4 == CRON\n5 == FLOW\n6 == VFS\n10 == CLIENT_APPROVAL\n11 == HUNT_APPROVAL\n12 == CRON_JOB_APPROVAL\n13 == UNKNOWN"
            },
            "grr.ApiGetFileDecodersArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiRDFValueDescriptor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "doc": {
                        "type": "string"
                    },
                    "kind": {
                        "$ref": "#/components/schemas/grr.ApiRDFValueDescriptor.Kind"
                    },
                    "default": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "parents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiRDFValueFieldDescriptor"
                        }
                    },
                    "union_field_name": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListPendingUserNotificationsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiNotification"
                        }
                    }
                }
            },
            "grr.ApiNotificationUnknownReference": {
                "type": "object",
                "properties": {
                    "source_urn": {
                        "type": "string"
                    },
                    "subject_urn": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetClientVersionTimesArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.DataBlob": {
                "type": "object",
                "properties": {
                    "integer": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "data": {
                        "type": "string",
                        "format": "binary"
                    },
                    "string": {
                        "type": "string"
                    },
                    "proto_name": {
                        "type": "string"
                    },
                    "none": {
                        "type": "string"
                    },
                    "boolean": {
                        "type": "boolean"
                    },
                    "list": {
                        "$ref": "#/components/schemas/grr.BlobArray"
                    },
                    "dict": {
                        "$ref": "#/components/schemas/grr.Dict"
                    },
                    "rdf_value": {
                        "$ref": "#/components/schemas/grr.EmbeddedRDFValue"
                    },
                    "float": {
                        "type": "number",
                        "format": "float"
                    },
                    "set": {
                        "$ref": "#/components/schemas/grr.BlobArray"
                    },
                    "compression": {
                        "$ref": "#/components/schemas/grr.DataBlob.CompressionType"
                    }
                }
            },
            "grr.ApiListFlowOutputPluginLogsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginBatchProcessingStatus"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiConfigSection": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiConfigOption"
                        }
                    }
                }
            },
            "grr.ApiListCronJobApprovalsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                        }
                    }
                }
            },
            "grr.AttributedDict": {
                "type": "object",
                "properties": {
                    "dat": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.KeyValue"
                        }
                    }
                }
            },
            "grr.ApiListPendingUserNotificationsArgs": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiGetFileTextArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "length": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "encoding": {
                        "$ref": "#/components/schemas/grr.ApiGetFileTextArgs.Encoding"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiGetVfsTimelineArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListCronJobRunsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiCronJobRun"
                        }
                    }
                }
            },
            "grr.ApiListHuntClientsArgs.ClientStatus": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == STARTED\n1 == OUTSTANDING\n2 == COMPLETED"
            },
            "grr.ApiVfsTimelineItem.FileActionType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == MODIFICATION\n1 == ACCESS\n2 == METADATA_CHANGED"
            },
            "grr.ApiGetOpenApiDescriptionResult": {
                "type": "object",
                "properties": {
                    "openapi_description": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGrrBinary.Type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    1,
                    2,
                    3
                ],
                "description": "1 == PYTHON_HACK\n2 == EXECUTABLE\n3 == COMPONENT_DEPRECATED"
            },
            "grr.ApiGetClientVersionsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "end": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/grr.ApiGetClientVersionsArgs.Mode"
                    }
                }
            },
            "grr.WindowsVolume": {
                "type": "object",
                "properties": {
                    "attributes_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.WindowsVolume.WindowsVolumeAttributeEnum"
                        }
                    },
                    "drive_letter": {
                        "type": "string"
                    },
                    "drive_type": {
                        "$ref": "#/components/schemas/grr.WindowsVolume.WindowsDriveTypeEnum"
                    }
                }
            },
            "grr.ApiFlowDescriptor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "friendly_name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "doc": {
                        "type": "string"
                    },
                    "args_type": {
                        "type": "string"
                    },
                    "default_args": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "behaviours": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiCreateHuntApprovalArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/grr.ApiHuntApproval"
                    }
                }
            },
            "grr.ApiListClientsLabelsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ClientLabel"
                        }
                    }
                }
            },
            "grr.ApiListFlowOutputPluginsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListHuntApprovalsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.WindowsVolume.WindowsDriveTypeEnum": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                "description": "0 == DRIVE_UNKNOWN\n1 == DRIVE_NO_ROOT_DIR\n2 == DRIVE_REMOVABLE\n3 == DRIVE_FIXED\n4 == DRIVE_REMOTE\n5 == DRIVE_CDROM\n6 == DRIVE_RAMDISK"
            },
            "grr.ApiRDFValueFieldDescriptor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "index": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "repeated": {
                        "type": "boolean"
                    },
                    "dynamic": {
                        "type": "boolean"
                    },
                    "doc": {
                        "type": "string"
                    },
                    "friendly_name": {
                        "type": "string"
                    },
                    "context_help_url": {
                        "type": "string"
                    },
                    "default": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiRDFAllowedEnumValueDescriptor"
                        }
                    }
                }
            },
            "grr.CloudInstance.InstanceType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    -1,
                    0,
                    1
                ],
                "description": "-1 == UNSET\n0 == AMAZON\n1 == GOOGLE"
            },
            "grr.HuntRunnerArgs": {
                "type": "object",
                "properties": {
                    "hunt_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "client_rule_set": {
                        "$ref": "#/components/schemas/grr.ForemanClientRuleSet"
                    },
                    "queue": {
                        "type": "string"
                    },
                    "cpu_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "network_bytes_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "client_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "crash_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "avg_results_per_client_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "avg_cpu_seconds_per_client_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "avg_network_bytes_per_client_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "expiry_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "client_rate": {
                        "type": "number",
                        "format": "float"
                    },
                    "add_foreman_rules": {
                        "type": "boolean"
                    },
                    "crash_alert_email": {
                        "type": "string"
                    },
                    "output_plugins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginDescriptor"
                        }
                    },
                    "per_client_cpu_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "per_client_network_limit_bytes": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "original_object": {
                        "$ref": "#/components/schemas/grr.FlowLikeObjectReference"
                    }
                }
            },
            "grr.ApiListClientActionRequestsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiClientActionRequest"
                        }
                    }
                }
            },
            "grr.ApiReportDescriptor.ReportType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == CLIENT\n1 == FILE_STORE\n2 == SERVER"
            },
            "grr.ApiListHuntOutputPluginErrorsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "plugin_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetReportArgs": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "client_label": {
                        "type": "string"
                    }
                }
            },
            "grr.CronJobRun.CronJobRunStatus": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "description": "0 == UNSET\n1 == RUNNING\n2 == FINISHED\n3 == ERROR\n4 == LIFETIME_EXCEEDED"
            },
            "grr.StatEntry.RegistryType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    4,
                    5,
                    6,
                    7,
                    11
                ],
                "description": "0 == REG_NONE\n1 == REG_SZ\n2 == REG_EXPAND_SZ\n3 == REG_BINARY\n4 == REG_DWORD\n4 == REG_DWORD_LITTLE_ENDIAN\n5 == REG_DWORD_BIG_ENDIAN\n6 == REG_LINK\n7 == REG_MULTI_SZ\n11 == REG_QWORD"
            },
            "grr.ApiGetGrrBinaryArgs": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ApiGrrBinary.Type"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListCronJobsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiCronJob"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListFlowOutputPluginsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiOutputPlugin"
                        }
                    }
                }
            },
            "grr.GrrMessage.Type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == MESSAGE\n1 == STATUS\n2 == ITERATOR"
            },
            "grr.ApiGetClientVersionsArgs.Mode": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNSET\n1 == FULL\n2 == DIFF"
            },
            "grr.AmazonCloudInstance": {
                "type": "object",
                "properties": {
                    "instance_id": {
                        "type": "string"
                    },
                    "ami_id": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "public_hostname": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetCollectedTimelineArgs.Format": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNSPECIFIED\n1 == BODY\n2 == RAW_GZCHUNKED"
            },
            "grr.ApiListHuntErrorsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiNotification": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/grr.UserNotification.Type"
                    },
                    "message": {
                        "type": "string"
                    },
                    "reference": {
                        "$ref": "#/components/schemas/grr.ApiNotificationReference"
                    },
                    "is_pending": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiListHuntLogsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetExportedFlowResultsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "plugin_name": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetRDFValueDescriptorArgs": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiClientApproval": {
                "type": "object",
                "properties": {
                    "subject": {
                        "$ref": "#/components/schemas/grr.ApiClient"
                    },
                    "id": {
                        "type": "string"
                    },
                    "requestor": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "is_valid": {
                        "type": "boolean"
                    },
                    "is_valid_message": {
                        "type": "string"
                    },
                    "email_message_id": {
                        "type": "string"
                    },
                    "notified_users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email_cc_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "approvers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiNotificationCronJobApprovalReference": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanIntegerClientRule": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/grr.ForemanIntegerClientRule.Operator"
                    },
                    "value": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "field": {
                        "$ref": "#/components/schemas/grr.ForemanIntegerClientRule.ForemanIntegerField"
                    }
                }
            },
            "grr.ApiOutputPlugin": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "plugin_descriptor": {
                        "$ref": "#/components/schemas/grr.OutputPluginDescriptor"
                    },
                    "state": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    }
                }
            },
            "grr.ApiGetCronJobArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiFlowRequest": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "string"
                    },
                    "request_state": {
                        "$ref": "#/components/schemas/grr.RequestState"
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.GrrMessage"
                        }
                    }
                }
            },
            "grr.ApiListHuntLogsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHuntLog"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetCronJobRunArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "run_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiStatsStoreMetricDataPoint": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "grr.ApiListClientApprovalsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiClientApproval"
                        }
                    }
                }
            },
            "grr.GUISettings": {
                "type": "object",
                "properties": {
                    "mode": {
                        "$ref": "#/components/schemas/grr.GUISettings.UIMode"
                    },
                    "canary_mode": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ClientCrash": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "client_info": {
                        "$ref": "#/components/schemas/grr.ClientInformation"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "crash_type": {
                        "type": "string"
                    },
                    "crash_message": {
                        "type": "string"
                    },
                    "backtrace": {
                        "type": "string"
                    },
                    "nanny_status": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFlowArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.HardwareInfo": {
                "type": "object",
                "properties": {
                    "serial_number": {
                        "type": "string"
                    },
                    "system_manufacturer": {
                        "type": "string"
                    },
                    "system_product_name": {
                        "type": "string"
                    },
                    "system_uuid": {
                        "type": "string"
                    },
                    "system_sku_number": {
                        "type": "string"
                    },
                    "system_family": {
                        "type": "string"
                    },
                    "bios_vendor": {
                        "type": "string"
                    },
                    "bios_version": {
                        "type": "string"
                    },
                    "bios_release_date": {
                        "type": "string"
                    },
                    "bios_rom_size": {
                        "type": "string"
                    },
                    "bios_revision": {
                        "type": "string"
                    },
                    "system_assettag": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowLogsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlowLog"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetFileTextResult": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "total_size": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiHuntLog": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "log_message": {
                        "type": "string"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.PwEntry.PwStore": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "description": "0 == UNKNOWN\n1 == PASSWD\n2 == SHADOW\n3 == GROUP\n4 == GSHADOW"
            },
            "grr.ClientResources": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "cpu_usage": {
                        "$ref": "#/components/schemas/grr.CpuSeconds"
                    },
                    "network_bytes_sent": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiHuntReference": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.StatsHistogramBin": {
                "type": "object",
                "properties": {
                    "range_max_value": {
                        "type": "number",
                        "format": "float"
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiFile": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "stat": {
                        "$ref": "#/components/schemas/grr.StatEntry"
                    },
                    "age": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "is_directory": {
                        "type": "boolean"
                    },
                    "hash": {
                        "$ref": "#/components/schemas/grr.Hash"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_collected_size": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "details": {
                        "$ref": "#/components/schemas/grr.ApiAff4ObjectRepresentation"
                    }
                }
            },
            "grr.ApiGetVfsTimelineResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiVfsTimelineItem"
                        }
                    }
                }
            },
            "grr.ApiStackChartReportData": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportDataSeries2D"
                        }
                    },
                    "x_ticks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportTickSpecifier"
                        }
                    },
                    "y_ticks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportTickSpecifier"
                        }
                    },
                    "bar_width": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "grr.NetworkAddress": {
                "type": "object",
                "properties": {
                    "address_type": {
                        "$ref": "#/components/schemas/grr.NetworkAddress.Family"
                    },
                    "DEPRECATED_human_readable": {
                        "type": "string"
                    },
                    "packed_bytes": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.CloudInstance": {
                "type": "object",
                "properties": {
                    "cloud_type": {
                        "$ref": "#/components/schemas/grr.CloudInstance.InstanceType"
                    },
                    "google": {
                        "$ref": "#/components/schemas/grr.GoogleCloudInstance"
                    },
                    "amazon": {
                        "$ref": "#/components/schemas/grr.AmazonCloudInstance"
                    }
                }
            },
            "grr.ApiPieChartReportData": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportDataPoint1D"
                        }
                    }
                }
            },
            "grr.HuntCronAction": {
                "type": "object",
                "properties": {
                    "hunt_runner_args": {
                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_args": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.AuditEvent.Action": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18
                ],
                "description": "0 == UNKNOWN\n1 == RUN_FLOW\n2 == CLIENT_APPROVAL_BREAK_GLASS_REQUEST\n3 == CLIENT_APPROVAL_GRANT\n4 == CLIENT_APPROVAL_REQUEST\n5 == CRON_APPROVAL_GRANT\n6 == CRON_APPROVAL_REQUEST\n7 == HUNT_APPROVAL_GRANT\n8 == HUNT_APPROVAL_REQUEST\n9 == HUNT_CREATED\n10 == HUNT_MODIFIED\n11 == HUNT_PAUSED\n12 == HUNT_STARTED\n13 == HUNT_STOPPED\n14 == CLIENT_ADD_LABEL\n15 == CLIENT_REMOVE_LABEL\n16 == USER_ADD\n17 == USER_UPDATE\n18 == USER_DELETE"
            },
            "grr.ApiNotificationVfsReference": {
                "type": "object",
                "properties": {
                    "vfs_path": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowOutputPluginErrorsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "plugin_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiRDFValueDescriptor.Kind": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == PRIMITIVE\n1 == STRUCT"
            },
            "grr.ApiFlow.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    3,
                    4
                ],
                "description": "0 == RUNNING\n1 == TERMINATED\n3 == ERROR\n4 == CLIENT_CRASHED"
            },
            "grr.ApiAddClientsLabelsArgs": {
                "type": "object",
                "properties": {
                    "client_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiGetClientApprovalArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.Volume": {
                "type": "object",
                "properties": {
                    "is_mounted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "device_path": {
                        "type": "string"
                    },
                    "file_system_type": {
                        "type": "string"
                    },
                    "total_allocation_units": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "sectors_per_allocation_unit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "bytes_per_sector": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "actual_available_allocation_units": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "creation_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "file_system_flag_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.Volume.VolumeFileSystemFlagEnum"
                        }
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "windowsvolume": {
                        "$ref": "#/components/schemas/grr.WindowsVolume"
                    },
                    "unixvolume": {
                        "$ref": "#/components/schemas/grr.UnixVolume"
                    }
                }
            },
            "grr.ApiGetConfigResult": {
                "type": "object",
                "properties": {
                    "sections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiConfigSection"
                        }
                    }
                }
            },
            "grr.ApiCreateClientApprovalArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/grr.ApiClientApproval"
                    },
                    "keep_client_alive": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiListArtifactsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ArtifactDescriptor"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.HuntReference": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListArtifactsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiReportData": {
                "type": "object",
                "properties": {
                    "representation_type": {
                        "$ref": "#/components/schemas/grr.ApiReportData.RepresentationType"
                    },
                    "stack_chart": {
                        "$ref": "#/components/schemas/grr.ApiStackChartReportData"
                    },
                    "pie_chart": {
                        "$ref": "#/components/schemas/grr.ApiPieChartReportData"
                    },
                    "line_chart": {
                        "$ref": "#/components/schemas/grr.ApiLineChartReportData"
                    },
                    "audit_chart": {
                        "$ref": "#/components/schemas/grr.ApiAuditChartReportData"
                    }
                }
            },
            "grr.HuntContext": {
                "type": "object",
                "properties": {
                    "client_resources": {
                        "$ref": "#/components/schemas/grr.ClientResources"
                    },
                    "create_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "DEPRECATED_expires": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "network_bytes_sent": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_client_due": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_outbound_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_processed_request": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "usage_stats": {
                        "$ref": "#/components/schemas/grr.ClientResourcesStats"
                    },
                    "clients_with_results_count": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "results_count": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "completed_clients_count": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "clients_queued_count": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiListApproverSuggestionsResult.ApproverSuggestion": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFlowResultsExportCommandResult": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "top_flows_only": {
                        "type": "boolean"
                    },
                    "min_started_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "max_started_at": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiListRDFValueDescriptorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiRDFValueDescriptor"
                        }
                    }
                }
            },
            "grr.ApiGetClientLoadStatsArgs.Metric": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                "description": "0 == CPU_PERCENT\n1 == CPU_SYSTEM\n2 == CPU_USER\n3 == IO_READ_BYTES\n4 == IO_WRITE_BYTES\n5 == IO_READ_OPS\n6 == IO_WRITE_OPS\n7 == NETWORK_BYTES_RECEIVED\n8 == NETWORK_BYTES_SENT\n9 == MEMORY_PERCENT\n10 == MEMORY_RSS_SIZE\n11 == MEMORY_VMS_SIZE"
            },
            "grr.ApiDataObject": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiDataObjectKeyValuePair"
                        }
                    }
                }
            },
            "grr.ApiCreateVfsRefreshOperationArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "max_depth": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "notify_user": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiListHuntClientsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_status": {
                        "$ref": "#/components/schemas/grr.ApiListHuntClientsArgs.ClientStatus"
                    }
                }
            },
            "grr.ApiFlowReference": {
                "type": "object",
                "properties": {
                    "flow_id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFileDetailsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ArtifactSource.SourceType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    40,
                    41,
                    42,
                    43,
                    45,
                    46
                ],
                "description": "0 == COLLECTOR_TYPE_UNKNOWN\n1 == FILE\n2 == REGISTRY_KEY\n3 == REGISTRY_VALUE\n4 == WMI\n5 == ARTIFACT\n6 == PATH\n7 == DIRECTORY\n8 == ARTIFACT_GROUP\n40 == GRR_CLIENT_ACTION\n41 == LIST_FILES\n42 == ARTIFACT_FILES\n43 == GREP\n45 == COMMAND\n46 == REKALL_PLUGIN"
            },
            "grr.ApiRDFAllowedEnumValueDescriptor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "doc": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiListHuntOutputPluginsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetHuntClientCompletionStatsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.PathSpec": {
                "type": "object",
                "properties": {
                    "pathtype": {
                        "$ref": "#/components/schemas/grr.PathSpec.PathType"
                    },
                    "path": {
                        "type": "string"
                    },
                    "mount_point": {
                        "type": "string"
                    },
                    "stream_name": {
                        "type": "string"
                    },
                    "nested_path": {
                        "$ref": "#/components/schemas/grr.PathSpec"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "path_options": {
                        "$ref": "#/components/schemas/grr.PathSpec.Options"
                    },
                    "recursion_depth": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "inode": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "ntfs_type": {
                        "$ref": "#/components/schemas/grr.PathSpec.tsk_fs_attr_type"
                    },
                    "ntfs_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "file_size_override": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "is_virtualroot": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiCreateHuntArgs": {
                "type": "object",
                "properties": {
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_args": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "hunt_runner_args": {
                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                    },
                    "original_flow": {
                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                    },
                    "original_hunt": {
                        "$ref": "#/components/schemas/grr.ApiHuntReference"
                    }
                }
            },
            "grr.ApiGetHuntClientCompletionStatsResult": {
                "type": "object",
                "properties": {
                    "start_points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.SampleFloat"
                        }
                    },
                    "complete_points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.SampleFloat"
                        }
                    }
                }
            },
            "grr.ApiGrrUser.UserType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == USER_TYPE_NONE\n1 == USER_TYPE_STANDARD\n2 == USER_TYPE_ADMIN"
            },
            "grr.ApiUploadYaraSignatureArgs": {
                "type": "object",
                "properties": {
                    "signature": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFlowFilesArchiveArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "archive_format": {
                        "$ref": "#/components/schemas/grr.ApiGetFlowFilesArchiveArgs.ArchiveFormat"
                    }
                }
            },
            "grr.ForemanLabelClientRule.MatchMode": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == MATCH_ALL\n1 == MATCH_ANY\n2 == DOES_NOT_MATCH_ALL\n3 == DOES_NOT_MATCH_ANY"
            },
            "grr.ApiListFlowDescriptorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlowDescriptor"
                        }
                    }
                }
            },
            "grr.OutputPluginBatchProcessingStatus.Status": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == SUCCESS\n1 == ERROR"
            },
            "grr.ApiHuntResult": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "payload_type": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiGetVfsRefreshOperationStateResult": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiGetVfsRefreshOperationStateResult.State"
                    }
                }
            },
            "grr.ForemanClientRuleSet.MatchMode": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == MATCH_ALL\n1 == MATCH_ANY"
            },
            "grr.ApiUploadArtifactArgs": {
                "type": "object",
                "properties": {
                    "artifact": {
                        "type": "string"
                    }
                }
            },
            "grr.UserNotification.Type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                "description": "0 == TYPE_UNSET\n1 == TYPE_CLIENT_INTERROGATED\n2 == TYPE_CLIENT_APPROVAL_REQUESTED\n3 == TYPE_HUNT_APPROVAL_REQUESTED\n4 == TYPE_CRON_JOB_APPROVAL_REQUESTED\n5 == TYPE_CLIENT_APPROVAL_GRANTED\n6 == TYPE_HUNT_APPROVAL_GRANTED\n7 == TYPE_CRON_JOB_APPROVAL_GRANTED\n8 == TYPE_VFS_FILE_COLLECTED\n9 == TYPE_VFS_FILE_COLLECTION_FAILED\n10 == TYPE_HUNT_STOPPED\n11 == TYPE_FILE_ARCHIVE_GENERATED\n12 == TYPE_FILE_ARCHIVE_GENERATION_FAILED\n13 == TYPE_FLOW_RUN_COMPLETED\n14 == TYPE_FLOW_RUN_FAILED\n15 == TYPE_VFS_LIST_DIRECTORY_COMPLETED\n16 == TYPE_VFS_RECURSIVE_LIST_DIRECTORY_COMPLETED\n17 == TYPE_FILE_BLOB_FETCH_FAILED"
            },
            "grr.ApiReportDataPoint2D": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "float"
                    },
                    "y": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "grr.ForemanRegexClientRule": {
                "type": "object",
                "properties": {
                    "attribute_regex": {
                        "type": "string"
                    },
                    "field": {
                        "$ref": "#/components/schemas/grr.ForemanRegexClientRule.ForemanStringField"
                    }
                }
            },
            "grr.ApiReportDescriptor": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ApiReportDescriptor.ReportType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "requires_time_range": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiCreateVfsRefreshOperationResult": {
                "type": "object",
                "properties": {
                    "operation_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanIntegerClientRule.Operator": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == EQUAL\n1 == LESS_THAN\n2 == GREATER_THAN"
            },
            "grr.ApiFlowLikeObjectReference": {
                "type": "object",
                "properties": {
                    "object_type": {
                        "$ref": "#/components/schemas/grr.ApiFlowLikeObjectReference.ObjectType"
                    },
                    "flow_reference": {
                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                    },
                    "hunt_reference": {
                        "$ref": "#/components/schemas/grr.ApiHuntReference"
                    }
                }
            },
            "grr.ApiForceRunCronJobArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiInterrogateClientResult": {
                "type": "object",
                "properties": {
                    "operation_id": {
                        "type": "string"
                    }
                }
            },
            "grr.GrrStatus.ReturnedStatus": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9,
                    10
                ],
                "description": "0 == OK\n1 == IOERROR\n2 == RETRANSMISSION_DETECTED\n3 == CLIENT_KILLED\n4 == NETWORK_LIMIT_EXCEEDED\n5 == RUNTIME_LIMIT_EXCEEDED\n6 == CPU_LIMIT_EXCEEDED\n9 == WORKER_STUCK\n10 == GENERIC_ERROR"
            },
            "grr.ApiAuditChartReportData": {
                "type": "object",
                "properties": {
                    "used_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.AuditEvent"
                        }
                    }
                }
            },
            "grr.ApiExplainGlobExpressionResult": {
                "type": "object",
                "properties": {
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.GlobComponentExplanation"
                        }
                    }
                }
            },
            "grr.OutputPluginDescriptor": {
                "type": "object",
                "properties": {
                    "plugin_name": {
                        "type": "string"
                    },
                    "plugin_args": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiInterrogateClientArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanClientRule.Type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == OS\n1 == LABEL\n2 == REGEX\n3 == INTEGER"
            },
            "grr.ApiListHuntsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHunt"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.Hash": {
                "type": "object",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "format": "binary"
                    },
                    "sha1": {
                        "type": "string",
                        "format": "binary"
                    },
                    "md5": {
                        "type": "string",
                        "format": "binary"
                    },
                    "pecoff_sha1": {
                        "type": "string",
                        "format": "binary"
                    },
                    "pecoff_md5": {
                        "type": "string",
                        "format": "binary"
                    },
                    "pecoff_sha256": {
                        "type": "string",
                        "format": "binary"
                    },
                    "signed_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.AuthenticodeSignedData"
                        }
                    },
                    "num_bytes": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "source_offset": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiCronJobRun": {
                "type": "object",
                "properties": {
                    "run_id": {
                        "type": "string"
                    },
                    "cron_job_id": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "finished_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/grr.CronJobRun.CronJobRunStatus"
                    },
                    "log_message": {
                        "type": "string"
                    },
                    "backtrace": {
                        "type": "string"
                    }
                }
            },
            "grr.ClientLabel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowLogsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListClientApprovalsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiListClientApprovalsArgs.State"
                    }
                }
            },
            "grr.ApiGetClientLoadStatsResult": {
                "type": "object",
                "properties": {
                    "data_points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiStatsStoreMetricDataPoint"
                        }
                    }
                }
            },
            "grr.ClientResourcesStats": {
                "type": "object",
                "properties": {
                    "user_cpu_stats": {
                        "$ref": "#/components/schemas/grr.RunningStats"
                    },
                    "system_cpu_stats": {
                        "$ref": "#/components/schemas/grr.RunningStats"
                    },
                    "network_bytes_sent_stats": {
                        "$ref": "#/components/schemas/grr.RunningStats"
                    },
                    "worst_performers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ClientResources"
                        }
                    }
                }
            },
            "grr.ApiGrrUserInterfaceTraits": {
                "type": "object",
                "properties": {
                    "cron_jobs_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "create_cron_job_action_enabled": {
                        "type": "boolean"
                    },
                    "hunt_manager_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "create_hunt_action_enabled": {
                        "type": "boolean"
                    },
                    "show_statistics_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "server_load_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "manage_binaries_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "upload_binary_action_enabled": {
                        "type": "boolean"
                    },
                    "settings_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "artifact_manager_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "upload_artifact_action_enabled": {
                        "type": "boolean"
                    },
                    "search_clients_action_enabled": {
                        "type": "boolean"
                    },
                    "browse_virtual_file_system_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "start_client_flow_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "manage_client_flows_nav_item_enabled": {
                        "type": "boolean"
                    },
                    "modify_client_labels_action_enabled": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiFlow": {
                "type": "object",
                "properties": {
                    "urn": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "args": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "progress": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "runner_args": {
                        "$ref": "#/components/schemas/grr.FlowRunnerArgs"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiFlow.State"
                    },
                    "started_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_active_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "state_data": {
                        "$ref": "#/components/schemas/grr.ApiDataObject"
                    },
                    "context": {
                        "$ref": "#/components/schemas/grr.FlowContext"
                    },
                    "nested_flows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlow"
                        }
                    },
                    "original_flow": {
                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                    },
                    "internal_error": {
                        "type": "string"
                    }
                }
            },
            "grr.PathSpec.tsk_fs_attr_type": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    1,
                    16,
                    32,
                    48,
                    64,
                    64,
                    80,
                    96,
                    112,
                    128,
                    144,
                    160,
                    176,
                    192,
                    192,
                    208,
                    224,
                    240,
                    256,
                    4097
                ],
                "description": "1 == TSK_FS_ATTR_TYPE_DEFAULT\n16 == TSK_FS_ATTR_TYPE_NTFS_SI\n32 == TSK_FS_ATTR_TYPE_NTFS_ATTRLIST\n48 == TSK_FS_ATTR_TYPE_NTFS_FNAME\n64 == TSK_FS_ATTR_TYPE_NTFS_VVER\n64 == TSK_FS_ATTR_TYPE_NTFS_OBJID\n80 == TSK_FS_ATTR_TYPE_NTFS_SEC\n96 == TSK_FS_ATTR_TYPE_NTFS_VNAME\n112 == TSK_FS_ATTR_TYPE_NTFS_VINFO\n128 == TSK_FS_ATTR_TYPE_NTFS_DATA\n144 == TSK_FS_ATTR_TYPE_NTFS_IDXROOT\n160 == TSK_FS_ATTR_TYPE_NTFS_IDXALLOC\n176 == TSK_FS_ATTR_TYPE_NTFS_BITMAP\n192 == TSK_FS_ATTR_TYPE_NTFS_SYMLNK\n192 == TSK_FS_ATTR_TYPE_NTFS_REPARSE\n208 == TSK_FS_ATTR_TYPE_NTFS_EAINFO\n224 == TSK_FS_ATTR_TYPE_NTFS_EA\n240 == TSK_FS_ATTR_TYPE_NTFS_PROP\n256 == TSK_FS_ATTR_TYPE_NTFS_LOG\n4097 == TSK_FS_ATTR_TYPE_UNIX_INDIR"
            },
            "grr.RequestState": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "ts_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_state": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/grr.GrrStatus"
                    },
                    "data": {
                        "$ref": "#/components/schemas/grr.Dict"
                    },
                    "response_count": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "transmission_count": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/grr.GrrMessage"
                    }
                }
            },
            "grr.GrrMessage": {
                "type": "object",
                "properties": {
                    "session_id": {
                        "type": "string"
                    },
                    "request_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "response_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "args": {
                        "type": "string",
                        "format": "binary"
                    },
                    "arg": {
                        "$ref": "#/components/schemas/grr.EmbeddedRDFValue"
                    },
                    "source": {
                        "type": "string"
                    },
                    "auth_state": {
                        "$ref": "#/components/schemas/grr.GrrMessage.AuthorizationState"
                    },
                    "type": {
                        "$ref": "#/components/schemas/grr.GrrMessage.Type"
                    },
                    "ttl": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "require_fastpoll": {
                        "type": "boolean"
                    },
                    "cpu_limit": {
                        "type": "number",
                        "format": "float"
                    },
                    "args_rdf_name": {
                        "type": "string"
                    },
                    "task_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "task_ttl": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "queue": {
                        "type": "string"
                    },
                    "leased_until": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "leased_by": {
                        "type": "string"
                    },
                    "network_bytes_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "runtime_limit_us": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ArtifactSource": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ArtifactSource.SourceType"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/grr.Dict"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "returned_types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supported_os": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiGetFileDownloadCommandResult": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowRequestsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.GoogleCloudInstance": {
                "type": "object",
                "properties": {
                    "unique_id": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "machine_type": {
                        "type": "string"
                    }
                }
            },
            "grr.FlowContext.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    3,
                    2
                ],
                "description": "0 == RUNNING\n1 == TERMINATED\n3 == ERROR\n2 == WELL_KNOWN"
            },
            "grr.ApiGetHuntFilesArchiveArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "archive_format": {
                        "$ref": "#/components/schemas/grr.ApiGetHuntFilesArchiveArgs.ArchiveFormat"
                    }
                }
            },
            "grr.KnowledgeBase": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.User"
                        }
                    },
                    "fqdn": {
                        "type": "string"
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "os_major_version": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "os_minor_version": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "environ_path": {
                        "type": "string"
                    },
                    "environ_temp": {
                        "type": "string"
                    },
                    "os_release": {
                        "type": "string"
                    },
                    "environ_allusersappdata": {
                        "type": "string"
                    },
                    "environ_allusersprofile": {
                        "type": "string"
                    },
                    "environ_commonprogramfiles": {
                        "type": "string"
                    },
                    "environ_commonprogramfilesx86": {
                        "type": "string"
                    },
                    "environ_comspec": {
                        "type": "string"
                    },
                    "environ_driverdata": {
                        "type": "string"
                    },
                    "environ_profilesdirectory": {
                        "type": "string"
                    },
                    "environ_programfiles": {
                        "type": "string"
                    },
                    "environ_programdata": {
                        "type": "string"
                    },
                    "environ_programfilesx86": {
                        "type": "string"
                    },
                    "environ_systemdrive": {
                        "type": "string"
                    },
                    "environ_systemroot": {
                        "type": "string"
                    },
                    "environ_windir": {
                        "type": "string"
                    },
                    "current_control_set": {
                        "type": "string"
                    },
                    "code_page": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "DEPRECATED_users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                }
            },
            "grr.GrrMessage.AuthorizationState": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNAUTHENTICATED\n1 == AUTHENTICATED\n2 == DESYNCHRONIZED"
            },
            "grr.ApiGrrUser": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/grr.GUISettings"
                    },
                    "interface_traits": {
                        "$ref": "#/components/schemas/grr.ApiGrrUserInterfaceTraits"
                    },
                    "user_type": {
                        "$ref": "#/components/schemas/grr.ApiGrrUser.UserType"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiCronJobApproval": {
                "type": "object",
                "properties": {
                    "subject": {
                        "$ref": "#/components/schemas/grr.ApiCronJob"
                    },
                    "id": {
                        "type": "string"
                    },
                    "requestor": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "is_valid": {
                        "type": "boolean"
                    },
                    "is_valid_message": {
                        "type": "string"
                    },
                    "email_message_id": {
                        "type": "string"
                    },
                    "notified_users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email_cc_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "approvers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiCancelFlowArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetHuntApprovalArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.PathSpec.PathType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    -1,
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                "description": "-1 == UNSET\n0 == OS\n1 == TSK\n2 == REGISTRY\n4 == TMPFILE\n5 == NTFS"
            },
            "grr.ApiListAndResetUserNotificationsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiNotification"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.RunningStats": {
                "type": "object",
                "properties": {
                    "histogram": {
                        "$ref": "#/components/schemas/grr.StatsHistogram"
                    },
                    "num": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "sum": {
                        "type": "number",
                        "format": "double"
                    },
                    "stddev": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "grr.ArtifactDescriptor": {
                "type": "object",
                "properties": {
                    "artifact": {
                        "$ref": "#/components/schemas/grr.Artifact"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "path_dependencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ArtifactProcessorDescriptor"
                        }
                    },
                    "is_custom": {
                        "type": "boolean"
                    },
                    "error_message": {
                        "type": "string"
                    }
                }
            },
            "grr.ForemanClientRuleSet": {
                "type": "object",
                "properties": {
                    "match_mode": {
                        "$ref": "#/components/schemas/grr.ForemanClientRuleSet.MatchMode"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ForemanClientRule"
                        }
                    }
                }
            },
            "grr.ApiReport": {
                "type": "object",
                "properties": {
                    "desc": {
                        "$ref": "#/components/schemas/grr.ApiReportDescriptor"
                    },
                    "data": {
                        "$ref": "#/components/schemas/grr.ApiReportData"
                    }
                }
            },
            "grr.ApiGrantHuntApprovalArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.WindowsVolume.WindowsVolumeAttributeEnum": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == READONLY\n1 == HIDDEN\n2 == NODEFAULTDRIVELETTER\n3 == SHADOWCOPY"
            },
            "grr.ForemanRegexClientRule.ForemanStringField": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                "description": "0 == UNSET\n1 == USERNAMES\n2 == UNAME\n3 == FQDN\n4 == HOST_IPS\n5 == CLIENT_NAME\n6 == CLIENT_DESCRIPTION\n7 == SYSTEM\n8 == MAC_ADDRESSES\n9 == KERNEL_VERSION\n10 == OS_VERSION\n11 == OS_RELEASE\n12 == CLIENT_LABELS"
            },
            "grr.ApiHuntError": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "log_message": {
                        "type": "string"
                    },
                    "backtrace": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiClient": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "fleetspeak_enabled": {
                        "type": "boolean"
                    },
                    "agent_info": {
                        "$ref": "#/components/schemas/grr.ClientInformation"
                    },
                    "hardware_info": {
                        "$ref": "#/components/schemas/grr.HardwareInfo"
                    },
                    "os_info": {
                        "$ref": "#/components/schemas/grr.Uname"
                    },
                    "knowledge_base": {
                        "$ref": "#/components/schemas/grr.KnowledgeBase"
                    },
                    "memory_size": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "first_seen_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_seen_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_booted_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_clock": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_crash_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ClientLabel"
                        }
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.Interface"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.User"
                        }
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.Volume"
                        }
                    },
                    "age": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "cloud_instance": {
                        "$ref": "#/components/schemas/grr.CloudInstance"
                    }
                }
            },
            "grr.ApiGrantCronJobApprovalArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiFlowResult": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "payload_type": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "tag": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGrantClientApprovalArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.CpuSeconds": {
                "type": "object",
                "properties": {
                    "user_cpu_time": {
                        "type": "number",
                        "format": "float"
                    },
                    "system_cpu_time": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "grr.ApiOutputPluginDescriptor": {
                "type": "object",
                "properties": {
                    "plugin_type": {
                        "$ref": "#/components/schemas/grr.ApiOutputPluginDescriptor.PluginType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "friendly_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "args_type": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetVfsFileContentUpdateStateArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "operation_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFlowFilesArchiveArgs.ArchiveFormat": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == ZIP\n1 == TAR_GZ"
            },
            "grr.ApiNotificationReference": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ApiNotificationReference.Type"
                    },
                    "client": {
                        "$ref": "#/components/schemas/grr.ApiNotificationClientReference"
                    },
                    "hunt": {
                        "$ref": "#/components/schemas/grr.ApiNotificationHuntReference"
                    },
                    "cron": {
                        "$ref": "#/components/schemas/grr.ApiNotificationCronReference"
                    },
                    "flow": {
                        "$ref": "#/components/schemas/grr.ApiNotificationFlowReference"
                    },
                    "vfs": {
                        "$ref": "#/components/schemas/grr.ApiNotificationVfsReference"
                    },
                    "client_approval": {
                        "$ref": "#/components/schemas/grr.ApiNotificationClientApprovalReference"
                    },
                    "hunt_approval": {
                        "$ref": "#/components/schemas/grr.ApiNotificationHuntApprovalReference"
                    },
                    "cron_job_approval": {
                        "$ref": "#/components/schemas/grr.ApiNotificationCronJobApprovalReference"
                    },
                    "unknown": {
                        "$ref": "#/components/schemas/grr.ApiNotificationUnknownReference"
                    }
                }
            },
            "grr.ApiGetInterrogateOperationStateArgs": {
                "type": "object",
                "properties": {
                    "operation_id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiAff4ObjectAttributeValue": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "age": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "value": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    }
                }
            },
            "grr.FlowLikeObjectReference.ObjectType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNKNOWN\n1 == FLOW_REFERENCE\n2 == HUNT_REFERENCE"
            },
            "grr.Volume.VolumeFileSystemFlagEnum": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21
                ],
                "description": "1 == FILE_CASE_SENSITIVE_SEARCH\n2 == FILE_CASE_PRESERVED_NAMES\n3 == FILE_UNICODE_ON_DISK\n4 == FILE_PERSISTENT_ACLS\n5 == FILE_FILE_COMPRESSION\n6 == FILE_VOLUME_QUOTAS\n7 == FILE_SUPPORTS_SPARSE_FILES\n8 == FILE_SUPPORTS_REPARSE_POINTS\n9 == FILE_SUPPORTS_REMOTE_STORAGE\n10 == FILE_VOLUME_IS_COMPRESSED\n11 == FILE_SUPPORTS_OBJECT_IDS\n12 == FILE_SUPPORTS_ENCRYPTION\n13 == FILE_NAMED_STREAMS\n14 == FILE_READ_ONLY_VOLUME\n15 == FILE_SEQUENTIAL_WRITE_ONCE\n16 == FILE_SUPPORTS_TRANSACTIONS\n17 == FILE_SUPPORTS_HARD_LINKS\n18 == FILE_SUPPORTS_EXTENDED_ATTRIBUTES\n19 == FILE_SUPPORTS_OPEN_BY_FILE_ID\n20 == FILE_SUPPORTS_USN_JOURNAL\n21 == FILE_SUPPORTS_INTEGRITY_STREAMS"
            },
            "grr.ApiGetGrrBinaryBlobArgs": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ApiGrrBinary.Type"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetHuntArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListGrrBinariesResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiGrrBinary"
                        }
                    }
                }
            },
            "grr.ApiModifyCronJobArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiGetHuntStatsResult": {
                "type": "object",
                "properties": {
                    "stats": {
                        "$ref": "#/components/schemas/grr.ClientResourcesStats"
                    }
                }
            },
            "grr.ApiExplainGlobExpressionArgs": {
                "type": "object",
                "properties": {
                    "glob_expression": {
                        "type": "string"
                    },
                    "example_count": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListClientApprovalsArgs.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == ANY\n1 == VALID\n2 == INVALID"
            },
            "grr.ApiGetHuntFileArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "vfs_path": {
                        "type": "string"
                    }
                }
            },
            "grr.SampleFloat": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "x_value": {
                        "type": "number",
                        "format": "float"
                    },
                    "y_value": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "grr.ApiReportData.RepresentationType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == STACK_CHART\n1 == PIE_CHART\n2 == LINE_CHART\n3 == AUDIT_CHART"
            },
            "grr.ApiGetVfsRefreshOperationStateArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "operation_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetVfsTimelineAsCsvArgs.Format": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNSET\n1 == GRR\n2 == BODY"
            },
            "grr.ApiLineChartReportData": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportDataSeries2D"
                        }
                    }
                }
            },
            "grr.ApiFlowLikeObjectReference.ObjectType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == UNKNOWN\n1 == FLOW_REFERENCE\n2 == HUNT_REFERENCE"
            },
            "grr.ApiRemoveClientsLabelsArgs": {
                "type": "object",
                "properties": {
                    "client_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiGetFileVersionTimesResult": {
                "type": "object",
                "properties": {
                    "times": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                }
            },
            "grr.ApiListHuntOutputPluginsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiOutputPlugin"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListCronJobsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiDataObjectKeyValuePair": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "invalid": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiVerifyAccessArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.KeyValue": {
                "type": "object",
                "properties": {
                    "k": {
                        "$ref": "#/components/schemas/grr.DataBlob"
                    },
                    "v": {
                        "$ref": "#/components/schemas/grr.DataBlob"
                    }
                }
            },
            "grr.CronJobAction": {
                "type": "object",
                "properties": {
                    "action_type": {
                        "$ref": "#/components/schemas/grr.CronJobAction.ActionType"
                    },
                    "system_cron_action": {
                        "$ref": "#/components/schemas/grr.SystemCronAction"
                    },
                    "hunt_cron_action": {
                        "$ref": "#/components/schemas/grr.HuntCronAction"
                    }
                }
            },
            "grr.ApiGetClientArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiGetVfsTimelineAsCsvArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "format": {
                        "$ref": "#/components/schemas/grr.ApiGetVfsTimelineAsCsvArgs.Format"
                    }
                }
            },
            "grr.ApiListHuntCrashesResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ClientCrash"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListHuntOutputPluginErrorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginBatchProcessingStatus"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetHuntResultsExportCommandResult": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetClientVersionsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiClient"
                        }
                    }
                }
            },
            "grr.ApiGetVfsFilesArchiveArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiListFlowOutputPluginLogsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "plugin_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiReportDataSeries2D": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReportDataPoint2D"
                        }
                    }
                }
            },
            "grr.PathSpec.Options": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == CASE_INSENSITIVE\n1 == CASE_LITERAL\n2 == REGEX\n3 == RECURSIVE"
            },
            "grr.ApiGetVfsFileContentUpdateStateResult.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == RUNNING\n1 == FINISHED"
            },
            "grr.ApiListHuntResultsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHuntResult"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.GrrStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/grr.GrrStatus.ReturnedStatus"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "backtrace": {
                        "type": "string"
                    },
                    "cpu_time_used": {
                        "$ref": "#/components/schemas/grr.CpuSeconds"
                    },
                    "child_session_id": {
                        "type": "string"
                    },
                    "network_bytes_sent": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "nanny_status": {
                        "type": "string"
                    },
                    "runtime_us": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiListFlowsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFlow"
                        }
                    }
                }
            },
            "grr.ApiListReportsResult": {
                "type": "object",
                "properties": {
                    "reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiReport"
                        }
                    }
                }
            },
            "grr.ApiGrrBinary": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/grr.ApiGrrBinary.Type"
                    },
                    "path": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "has_valid_signature": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiListFlowOutputPluginErrorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginBatchProcessingStatus"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListOutputPluginDescriptorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiOutputPluginDescriptor"
                        }
                    }
                }
            },
            "grr.ApiCronJob": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "args": {
                        "$ref": "#/components/schemas/grr.CronJobAction"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "current_run_id": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "last_run_status": {
                        "$ref": "#/components/schemas/grr.CronJobRun.CronJobRunStatus"
                    },
                    "last_run_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiDataObject"
                    },
                    "frequency": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "lifetime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "allow_overruns": {
                        "type": "boolean"
                    },
                    "forced_run_requested": {
                        "type": "boolean"
                    },
                    "is_failing": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetFileDownloadCommandArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                }
            },
            "grr.NetworkAddress.Family": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == INET\n1 == INET6"
            },
            "grr.ApiGetHuntContextArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiNotificationFlowReference": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiDeleteHuntArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetInterrogateOperationStateResult": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiGetInterrogateOperationStateResult.State"
                    }
                }
            },
            "grr.StatEntry.ExtAttr": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "binary"
                    },
                    "value": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiGetLastClientIPAddressArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.GlobComponentExplanation": {
                "type": "object",
                "properties": {
                    "glob_expression": {
                        "type": "string"
                    },
                    "examples": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiFlowLog": {
                "type": "object",
                "properties": {
                    "log_message": {
                        "type": "string"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ForemanOsClientRule": {
                "type": "object",
                "properties": {
                    "os_windows": {
                        "type": "boolean"
                    },
                    "os_linux": {
                        "type": "boolean"
                    },
                    "os_darwin": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiGetClientLoadStatsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "start": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "end": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "metric": {
                        "$ref": "#/components/schemas/grr.ApiGetClientLoadStatsArgs.Metric"
                    }
                }
            },
            "grr.ApiMethod.ResultKind": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == NONE\n1 == VALUE\n2 == BINARY_STREAM"
            },
            "grr.ApiGetHuntResultsExportCommandArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFilesArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "directories_only": {
                        "type": "boolean"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.ApiNotificationHuntApprovalReference": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "approval_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiNotificationClientReference": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiAff4ObjectRepresentation": {
                "type": "object",
                "properties": {
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiAff4ObjectType"
                        }
                    }
                }
            },
            "grr.ApiGetExportedHuntResultsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "plugin_name": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiDeleteCronJobArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    }
                }
            },
            "grr.User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "temp": {
                        "type": "string"
                    },
                    "desktop": {
                        "type": "string"
                    },
                    "last_logon": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "userdomain": {
                        "type": "string"
                    },
                    "sid": {
                        "type": "string"
                    },
                    "userprofile": {
                        "type": "string"
                    },
                    "appdata": {
                        "type": "string"
                    },
                    "localappdata": {
                        "type": "string"
                    },
                    "internet_cache": {
                        "type": "string"
                    },
                    "cookies": {
                        "type": "string"
                    },
                    "recent": {
                        "type": "string"
                    },
                    "personal": {
                        "type": "string"
                    },
                    "startup": {
                        "type": "string"
                    },
                    "localappdata_low": {
                        "type": "string"
                    },
                    "homedir": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "gid": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "shell": {
                        "type": "string"
                    },
                    "pw_entry": {
                        "$ref": "#/components/schemas/grr.PwEntry"
                    },
                    "gids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "uint32"
                        }
                    }
                }
            },
            "grr.ApiListCronJobRunsArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListHuntErrorsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHuntError"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.Interface": {
                "type": "object",
                "properties": {
                    "mac_address": {
                        "type": "string",
                        "format": "binary"
                    },
                    "ip4_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "ifname": {
                        "type": "string"
                    },
                    "ip6_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.NetworkAddress"
                        }
                    },
                    "dhcp_lease_expires": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "dhcp_lease_obtained": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "dhcp_server_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.NetworkAddress"
                        }
                    },
                    "ip_gateway_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.NetworkAddress"
                        }
                    }
                }
            },
            "grr.Artifact": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "doc": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supported_os": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "provides": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ArtifactSource"
                        }
                    },
                    "error_message": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiCreateCronJobApprovalArgs": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                    }
                }
            },
            "grr.ApiGetHuntStatsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListFlowResultsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "with_tag": {
                        "type": "string"
                    }
                }
            },
            "grr.StatsHistogram": {
                "type": "object",
                "properties": {
                    "bins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.StatsHistogramBin"
                        }
                    }
                }
            },
            "grr.ApiSearchClientsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiClient"
                        }
                    }
                }
            },
            "grr.ApiSearchClientsArgs": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiCreateCronJobArgs": {
                "type": "object",
                "properties": {
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_args": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "hunt_runner_args": {
                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                    },
                    "description": {
                        "type": "string"
                    },
                    "periodicity": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "lifetime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "allow_overruns": {
                        "type": "boolean"
                    }
                }
            },
            "grr.AuthenticodeSignedData": {
                "type": "object",
                "properties": {
                    "revision": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "cert_type": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "certificate": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiGetInterrogateOperationStateResult.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1
                ],
                "description": "0 == RUNNING\n1 == FINISHED"
            },
            "grr.ApiListClientCrashesResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ClientCrash"
                        }
                    },
                    "total_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.StatEntry": {
                "type": "object",
                "properties": {
                    "st_mode": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "st_ino": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_dev": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_nlink": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_uid": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_gid": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_size": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "st_atime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "st_mtime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "st_ctime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "st_blocks": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_blksize": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_rdev": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_flags_osx": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "st_flags_linux": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "symlink": {
                        "type": "string"
                    },
                    "registry_type": {
                        "$ref": "#/components/schemas/grr.StatEntry.RegistryType"
                    },
                    "resident": {
                        "type": "string",
                        "format": "binary"
                    },
                    "pathspec": {
                        "$ref": "#/components/schemas/grr.PathSpec"
                    },
                    "registry_data": {
                        "$ref": "#/components/schemas/grr.DataBlob"
                    },
                    "st_crtime": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "ext_attrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.StatEntry.ExtAttr"
                        }
                    }
                }
            },
            "grr.ApiGetLastClientIPAddressResult": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/grr.ApiGetLastClientIPAddressResult.Status"
                    }
                }
            },
            "grr.ArtifactProcessorDescriptor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "output_types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.GUISettings.UIMode": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == BASIC\n1 == ADVANCED\n2 == DEBUG"
            },
            "grr.ApiGetClientVersionTimesResult": {
                "type": "object",
                "properties": {
                    "times": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                }
            },
            "grr.ApiHunt": {
                "type": "object",
                "properties": {
                    "urn": {
                        "type": "string"
                    },
                    "hunt_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiHunt.State"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "flow_args": {
                        "$ref": "#/components/schemas/google.protobuf.Any"
                    },
                    "hunt_runner_args": {
                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                    },
                    "all_clients_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "remaining_clients_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "completed_clients_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "crash_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_rate": {
                        "type": "number",
                        "format": "float"
                    },
                    "created": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "init_start_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "last_start_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "DEPRECATED_expires": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "client_rule_set": {
                        "$ref": "#/components/schemas/grr.ForemanClientRuleSet"
                    },
                    "is_robot": {
                        "type": "boolean"
                    },
                    "total_cpu_usage": {
                        "type": "number",
                        "format": "float"
                    },
                    "total_net_usage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "clients_with_results_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "results_count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "original_object": {
                        "$ref": "#/components/schemas/grr.ApiFlowLikeObjectReference"
                    },
                    "internal_error": {
                        "type": "string"
                    },
                    "clients_queued_count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiUpdateVfsFileContentResult": {
                "type": "object",
                "properties": {
                    "operation_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiNotificationCronReference": {
                "type": "object",
                "properties": {
                    "cron_job_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiHunt.State": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "description": "0 == PAUSED\n1 == STARTED\n2 == STOPPED\n3 == COMPLETED"
            },
            "grr.ApiListFilesResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiFile"
                        }
                    }
                }
            },
            "grr.FlowRunnerArgs": {
                "type": "object",
                "properties": {
                    "notify_to_user": {
                        "type": "boolean"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "queue": {
                        "type": "string"
                    },
                    "cpu_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "network_bytes_limit": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "request_state": {
                        "$ref": "#/components/schemas/grr.RequestState"
                    },
                    "flow_name": {
                        "type": "string"
                    },
                    "base_session_id": {
                        "type": "string"
                    },
                    "logs_collection_urn": {
                        "type": "string"
                    },
                    "write_intermediate_results": {
                        "type": "boolean"
                    },
                    "require_fastpoll": {
                        "type": "boolean"
                    },
                    "output_plugins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginDescriptor"
                        }
                    },
                    "original_flow": {
                        "$ref": "#/components/schemas/grr.FlowReference"
                    }
                }
            },
            "grr.ApiVfsTimelineItem": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/grr.ApiVfsTimelineItem.FileActionType"
                    }
                }
            },
            "grr.ClientInformation": {
                "type": "object",
                "properties": {
                    "client_name": {
                        "type": "string"
                    },
                    "client_version": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "revision": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "build_time": {
                        "type": "string"
                    },
                    "client_binary_name": {
                        "type": "string"
                    },
                    "client_description": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.ApiListApproverSuggestionsResult": {
                "type": "object",
                "properties": {
                    "suggestions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiListApproverSuggestionsResult.ApproverSuggestion"
                        }
                    }
                }
            },
            "grr.ApiListApiMethodsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiMethod"
                        }
                    }
                }
            },
            "grr.OutputPluginState": {
                "type": "object",
                "properties": {
                    "plugin_descriptor": {
                        "$ref": "#/components/schemas/grr.OutputPluginDescriptor"
                    },
                    "plugin_state": {
                        "$ref": "#/components/schemas/grr.AttributedDict"
                    }
                }
            },
            "grr.ApiClientActionRequest": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "leased_until": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "client_action": {
                        "type": "string"
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.GrrMessage"
                        }
                    }
                }
            },
            "grr.ApiListHuntApprovalsResult": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.ApiHuntApproval"
                        }
                    }
                }
            },
            "grr.ApiOutputPluginDescriptor.PluginType": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2
                ],
                "description": "0 == LEGACY\n1 == INSTANT\n2 == LIVE"
            },
            "google.protobuf.Any": {
                "type": "object",
                "properties": {
                    "type_url": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "grr.ApiGetGrrVersionResult": {
                "type": "object",
                "properties": {
                    "major": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "minor": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "revision": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "release": {
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "grr.ApiListClientCrashesArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter": {
                        "type": "string"
                    }
                }
            },
            "grr.FlowContext": {
                "type": "object",
                "properties": {
                    "backtrace": {
                        "type": "string"
                    },
                    "client_resources": {
                        "$ref": "#/components/schemas/grr.ClientResources"
                    },
                    "create_time": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "creator": {
                        "type": "string"
                    },
                    "current_state": {
                        "type": "string"
                    },
                    "kill_timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "network_bytes_sent": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_outbound_id": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "next_processed_request": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "output_plugins_states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.OutputPluginState"
                        }
                    },
                    "outstanding_requests": {
                        "type": "integer",
                        "format": "uint64"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.FlowContext.State"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiGetCollectedTimelineArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "flow_id": {
                        "type": "string"
                    },
                    "format": {
                        "$ref": "#/components/schemas/grr.ApiGetCollectedTimelineArgs.Format"
                    }
                }
            },
            "grr.Dict": {
                "type": "object",
                "properties": {
                    "dat": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/grr.KeyValue"
                        }
                    }
                }
            },
            "grr.ApiListHuntOutputPluginLogsArgs": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    },
                    "plugin_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiListKnownEncodingsResult": {
                "type": "object",
                "properties": {
                    "encodings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "grr.FlowReference": {
                "type": "object",
                "properties": {
                    "flow_id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListClientActionRequestsArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "fetch_responses": {
                        "type": "boolean"
                    }
                }
            },
            "grr.ApiGetFileBlobArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "length": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "uint64"
                    }
                }
            },
            "grr.SystemCronAction": {
                "type": "object",
                "properties": {
                    "job_class_name": {
                        "type": "string"
                    }
                }
            },
            "grr.FlowLikeObjectReference": {
                "type": "object",
                "properties": {
                    "object_type": {
                        "$ref": "#/components/schemas/grr.FlowLikeObjectReference.ObjectType"
                    },
                    "flow_reference": {
                        "$ref": "#/components/schemas/grr.FlowReference"
                    },
                    "hunt_reference": {
                        "$ref": "#/components/schemas/grr.HuntReference"
                    }
                }
            },
            "grr.ApiGetHuntContextResult": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/grr.HuntContext"
                    },
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiDataObject"
                    }
                }
            },
            "grr.ApiHuntApproval": {
                "type": "object",
                "properties": {
                    "subject": {
                        "$ref": "#/components/schemas/grr.ApiHunt"
                    },
                    "id": {
                        "type": "string"
                    },
                    "requestor": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "is_valid": {
                        "type": "boolean"
                    },
                    "is_valid_message": {
                        "type": "string"
                    },
                    "email_message_id": {
                        "type": "string"
                    },
                    "notified_users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email_cc_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "approvers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "copied_from_hunt": {
                        "$ref": "#/components/schemas/grr.ApiHunt"
                    },
                    "copied_from_flow": {
                        "$ref": "#/components/schemas/grr.ApiFlow"
                    }
                }
            },
            "grr.ApiNotificationHuntReference": {
                "type": "object",
                "properties": {
                    "hunt_id": {
                        "type": "string"
                    }
                }
            },
            "grr.ApiListCronJobApprovalsArgs": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "grr.ApiGetFileTextArgs.Encoding": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51
                ],
                "description": "0 == BASE64_CODEC\n1 == BIG5\n2 == BIG5HKSCS\n3 == CP037\n4 == CP1006\n5 == CP1026\n6 == CP1140\n7 == CP1250\n8 == CP1251\n9 == CP1252\n10 == CP1253\n11 == CP1254\n12 == CP1255\n13 == CP1256\n14 == CP1257\n15 == CP1258\n16 == CP424\n17 == CP437\n18 == CP500\n19 == CP737\n20 == CP775\n21 == CP850\n22 == CP852\n23 == CP855\n24 == CP856\n25 == CP857\n26 == CP860\n27 == CP861\n28 == CP862\n29 == CP863\n30 == CP864\n31 == CP865\n32 == CP866\n33 == CP869\n34 == CP874\n35 == CP875\n36 == CP932\n37 == CP949\n38 == CP950\n39 == IDNA\n40 == ROT_13\n41 == UTF_16\n42 == UTF_16_BE\n43 == UTF_16_LE\n44 == UTF_32\n45 == UTF_32_BE\n46 == UTF_32_LE\n47 == UTF_7\n48 == UTF_8\n49 == UTF_8_SIG\n50 == UU_CODEC\n51 == ZLIB_CODEC"
            },
            "grr.PwEntry": {
                "type": "object",
                "properties": {
                    "store": {
                        "$ref": "#/components/schemas/grr.PwEntry.PwStore"
                    },
                    "hash_type": {
                        "$ref": "#/components/schemas/grr.PwEntry.PwHash"
                    },
                    "age": {
                        "type": "integer",
                        "format": "uint32"
                    },
                    "max_age": {
                        "type": "integer",
                        "format": "uint32"
                    }
                }
            },
            "grr.ApiGetDecodedFileArgs": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "decoder_name": {
                        "type": "string"
                    }
                }
            },
            "grr.PwEntry.PwHash": {
                "type": "integer",
                "format": "int32",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    13,
                    14,
                    15
                ],
                "description": "0 == DES\n1 == MD5\n2 == BLOWFISH\n3 == NTHASH\n4 == UNUSED\n5 == SHA256\n6 == SHA512\n13 == UNSET\n14 == DISABLED\n15 == EMPTY"
            },
            "grr.ApiGetVfsFileContentUpdateStateResult": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/grr.ApiGetVfsFileContentUpdateStateResult.State"
                    }
                }
            }
        }
    },
    "paths": {
        "/api/clients/labels/add": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "description": "Labels given clients with given labels.",
                "operationId": "POST--api-clients-labels-add-AddClientsLabels",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "client_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the AddClientsLabels API method succeeded."
                    },
                    "default": {
                        "description": "The call to the AddClientsLabels API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/actions/cancel": {
            "post": {
                "tags": [
                    "Flows"
                ],
                "description": "Stop given flow on a given client.",
                "operationId": "POST--api-clients-_client_id_-flows-_path-flow_id_-actions-cancel-CancelFlow",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the CancelFlow API method succeeded and it returned an instance of grr.ApiFlow.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiFlow"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CancelFlow API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/client/{client_id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Create new client approval.",
                "operationId": "POST--api-users-me-approvals-client-_client_id_-CreateClientApproval",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "approval": {
                                        "$ref": "#/components/schemas/grr.ApiClientApproval"
                                    },
                                    "keep_client_alive": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateClientApproval API method succeeded and it returned an instance of grr.ApiClientApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiClientApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateClientApproval API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List client approvals of a current user in reversed timestamp order.",
                "operationId": "GET--api-users-me-approvals-client-_client_id_-ListClientApprovals",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiListClientApprovalsArgs.State"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListClientApprovals API method succeeded and it returned an instance of grr.ApiListClientApprovalsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListClientApprovalsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListClientApprovals API method did not succeed."
                    }
                }
            }
        },
        "/api/cron-jobs": {
            "post": {
                "tags": [
                    "Cron"
                ],
                "description": "Create new cron job.",
                "operationId": "POST--api-cron-jobs-CreateCronJob",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "flow_name": {
                                        "type": "string"
                                    },
                                    "flow_args": {
                                        "$ref": "#/components/schemas/google.protobuf.Any"
                                    },
                                    "hunt_runner_args": {
                                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "periodicity": {
                                        "type": "integer",
                                        "format": "uint64"
                                    },
                                    "lifetime": {
                                        "type": "integer",
                                        "format": "uint64"
                                    },
                                    "allow_overruns": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateCronJob API method succeeded and it returned an instance of grr.ApiCronJob.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJob"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateCronJob API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Cron"
                ],
                "description": "List available cron jobs.",
                "operationId": "GET--api-cron-jobs-ListCronJobs",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListCronJobs API method succeeded and it returned an instance of grr.ApiListCronJobsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListCronJobsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListCronJobs API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/cron-job/{cron_job_id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Create new cron job approval.",
                "operationId": "POST--api-users-me-approvals-cron-job-_cron_job_id_-CreateCronJobApproval",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "approval": {
                                        "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateCronJobApproval API method succeeded and it returned an instance of grr.ApiCronJobApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateCronJobApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows": {
            "post": {
                "tags": [
                    "Flows"
                ],
                "description": "Start a new flow on a given client.",
                "operationId": "POST--api-clients-_client_id_-flows-CreateFlow",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "flow": {
                                        "$ref": "#/components/schemas/grr.ApiFlow"
                                    },
                                    "original_flow": {
                                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateFlow API method succeeded and it returned an instance of grr.ApiFlow.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiFlow"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateFlow API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List flows on a given client.",
                "operationId": "GET--api-clients-_client_id_-flows-ListFlows",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "max_started_at",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "top_flows_only",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "min_started_at",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlows API method succeeded and it returned an instance of grr.ApiListFlowsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlows API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts": {
            "post": {
                "tags": [
                    "Hunts"
                ],
                "description": "Create a new hunt.",
                "operationId": "POST--api-hunts-CreateHunt",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "flow_name": {
                                        "type": "string"
                                    },
                                    "flow_args": {
                                        "$ref": "#/components/schemas/google.protobuf.Any"
                                    },
                                    "hunt_runner_args": {
                                        "$ref": "#/components/schemas/grr.HuntRunnerArgs"
                                    },
                                    "original_flow": {
                                        "$ref": "#/components/schemas/grr.ApiFlowReference"
                                    },
                                    "original_hunt": {
                                        "$ref": "#/components/schemas/grr.ApiHuntReference"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateHunt API method succeeded and it returned an instance of grr.ApiHunt.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHunt"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateHunt API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunts.",
                "operationId": "GET--api-hunts-ListHunts",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "active_within",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description_contains",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHunts API method succeeded and it returned an instance of grr.ApiListHuntsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHunts API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/hunt/{hunt_id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Create new hunt approval.",
                "operationId": "POST--api-users-me-approvals-hunt-_hunt_id_-CreateHuntApproval",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "approval": {
                                        "$ref": "#/components/schemas/grr.ApiHuntApproval"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateHuntApproval API method succeeded and it returned an instance of grr.ApiHuntApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHuntApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateHuntApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-refresh-operations": {
            "post": {
                "tags": [
                    "Vfs"
                ],
                "description": "Start VFS refresh operation (refreshes a given VFS folder).",
                "operationId": "POST--api-clients-_client_id_-vfs-refresh-operations-CreateVfsRefreshOperation",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file_path": {
                                        "type": "string"
                                    },
                                    "max_depth": {
                                        "type": "integer",
                                        "format": "uint64"
                                    },
                                    "notify_user": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the CreateVfsRefreshOperation API method succeeded and it returned an instance of grr.ApiCreateVfsRefreshOperationResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCreateVfsRefreshOperationResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the CreateVfsRefreshOperation API method did not succeed."
                    }
                }
            }
        },
        "/api/artifacts": {
            "delete": {
                "tags": [
                    "Artifacts"
                ],
                "description": "Delete one of previously uploaded artifacts.",
                "operationId": "DELETE--api-artifacts-DeleteArtifacts",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "names": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the DeleteArtifacts API method succeeded."
                    },
                    "default": {
                        "description": "The call to the DeleteArtifacts API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Artifacts"
                ],
                "description": "List available artifacts definitions.",
                "operationId": "GET--api-artifacts-ListArtifacts",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListArtifacts API method succeeded and it returned an instance of grr.ApiListArtifactsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListArtifactsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListArtifacts API method did not succeed."
                    }
                }
            },
            "post": {
                "tags": [
                    "Artifacts"
                ],
                "description": "Upload new artifact definition.",
                "operationId": "POST--api-artifacts-UploadArtifact",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "artifact": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the UploadArtifact API method succeeded."
                    },
                    "default": {
                        "description": "The call to the UploadArtifact API method did not succeed."
                    }
                }
            }
        },
        "/api/cron-jobs/{cron_job_id}": {
            "delete": {
                "tags": [
                    "Cron"
                ],
                "description": "Delete given cron job and all its flows.",
                "operationId": "DELETE--api-cron-jobs-_cron_job_id_-DeleteCronJob",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the DeleteCronJob API method succeeded."
                    },
                    "default": {
                        "description": "The call to the DeleteCronJob API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Cron"
                ],
                "description": "Get details of a given cron job.",
                "operationId": "GET--api-cron-jobs-_cron_job_id_-GetCronJob",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetCronJob API method succeeded and it returned an instance of grr.ApiCronJob.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJob"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetCronJob API method did not succeed."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Hunts"
                ],
                "description": "Modify cron job (includes enabling/disabling).",
                "operationId": "PATCH--api-cron-jobs-_cron_job_id_-ModifyCronJob",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the ModifyCronJob API method succeeded and it returned an instance of grr.ApiCronJob.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJob"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ModifyCronJob API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}": {
            "delete": {
                "tags": [
                    "Hunts"
                ],
                "description": "Delete a hunt with all its data.",
                "operationId": "DELETE--api-hunts-_hunt_id_-DeleteHunt",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the DeleteHunt API method succeeded."
                    },
                    "default": {
                        "description": "The call to the DeleteHunt API method did not succeed."
                    }
                }
            },
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get details of a hunt with a given id.",
                "operationId": "GET--api-hunts-_hunt_id_-GetHunt",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHunt API method succeeded and it returned an instance of grr.ApiHunt.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHunt"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHunt API method did not succeed."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Hunts"
                ],
                "description": "Modify hunt (includes stopping/starting).",
                "operationId": "PATCH--api-hunts-_hunt_id_-ModifyHunt",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "$ref": "#/components/schemas/grr.ApiHunt.State"
                                    },
                                    "client_limit": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "client_rate": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "DEPRECATED_expires": {
                                        "type": "integer",
                                        "format": "uint64"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "format": "uint64"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the ModifyHunt API method succeeded and it returned an instance of grr.ApiHunt.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHunt"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ModifyHunt API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/notifications/pending/{timestamp}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete pending user notifications.",
                "operationId": "DELETE--api-users-me-notifications-pending-_timestamp_-DeletePendingUserNotification",
                "parameters": [
                    {
                        "name": "timestamp",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the DeletePendingUserNotification API method succeeded."
                    },
                    "default": {
                        "description": "The call to the DeletePendingUserNotification API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/glob-expressions:explain": {
            "post": {
                "tags": [
                    "Flows"
                ],
                "description": "No description.",
                "operationId": "POST--api-clients-_client_id_-glob-expressions-explain-ExplainGlobExpression",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "glob_expression": {
                                        "type": "string"
                                    },
                                    "example_count": {
                                        "type": "integer",
                                        "format": "uint32"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the ExplainGlobExpression API method succeeded and it returned an instance of grr.ApiExplainGlobExpressionResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiExplainGlobExpressionResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ExplainGlobExpression API method did not succeed."
                    }
                }
            }
        },
        "/api/cron-jobs/{cron_job_id}/actions/force-run": {
            "post": {
                "tags": [
                    "Cron"
                ],
                "description": "Force an out-of-schedule run of a given cron job.",
                "operationId": "POST--api-cron-jobs-_cron_job_id_-actions-force-run-ForceRunCronJob",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ForceRunCronJob API method succeeded."
                    },
                    "default": {
                        "description": "The call to the ForceRunCronJob API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Get client with a given client id.",
                "operationId": "GET--api-clients-_client_id_-GetClient",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetClient API method succeeded and it returned an instance of grr.ApiClient.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiClient"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetClient API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/client/{client_id}/{approval_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get client approval identified by approval id, client id and username.",
                "operationId": "GET--api-users-_username_-approvals-client-_client_id_-_approval_id_-GetClientApproval",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetClientApproval API method succeeded and it returned an instance of grr.ApiClientApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiClientApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetClientApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/load-stats/{metric}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Get client load statistics (CPI and IO).",
                "operationId": "GET--api-clients-_client_id_-load-stats-_metric_-GetClientLoadStats",
                "parameters": [
                    {
                        "name": "metric",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetClientLoadStatsArgs.Metric"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetClientLoadStats API method succeeded and it returned an instance of grr.ApiGetClientLoadStatsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetClientLoadStatsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetClientLoadStats API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/version-times": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "List available version-times of a client object with a given id.",
                "operationId": "GET--api-clients-_client_id_-version-times-GetClientVersionTimes",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetClientVersionTimes API method succeeded and it returned an instance of grr.ApiGetClientVersionTimesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetClientVersionTimesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetClientVersionTimes API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/versions": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Get different client versions in a given time range.",
                "operationId": "GET--api-clients-_client_id_-versions-GetClientVersions",
                "parameters": [
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetClientVersionsArgs.Mode"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetClientVersions API method succeeded and it returned an instance of grr.ApiGetClientVersionsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetClientVersionsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetClientVersions API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/timelines": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Exports results of a timeline hunt as a ZIP archive.",
                "operationId": "GET--api-hunts-_hunt_id_-timelines-GetCollectedHuntTimelines",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetCollectedHuntTimelines API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetCollectedHuntTimelines API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/timeline/{format}": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "Exports results of a timeline flow to the specific format.",
                "operationId": "GET--api-clients-_client_id_-flows-_flow_id_-timeline-_format_-GetCollectedTimeline",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetCollectedTimelineArgs.Format"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetCollectedTimeline API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetCollectedTimeline API method did not succeed."
                    }
                }
            }
        },
        "/api/config": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Get current AdminUI configuration.",
                "operationId": "GET--api-config-GetConfig",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the GetConfig API method succeeded and it returned an instance of grr.ApiGetConfigResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetConfigResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetConfig API method did not succeed."
                    }
                }
            }
        },
        "/api/config/{name}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Get a single AdminUI configuration option.",
                "operationId": "GET--api-config-_name_-GetConfigOption",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetConfigOption API method succeeded and it returned an instance of grr.ApiConfigOption.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiConfigOption"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetConfigOption API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/cron-job/{cron_job_id}/{approval_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get cron job approval identified by approval id, cron id and username.",
                "operationId": "GET--api-users-_username_-approvals-cron-job-_cron_job_id_-_approval_id_-GetCronJobApproval",
                "parameters": [
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetCronJobApproval API method succeeded and it returned an instance of grr.ApiCronJobApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetCronJobApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/cron-jobs/{cron_job_id}/runs/{run_id}": {
            "get": {
                "tags": [
                    "Cron"
                ],
                "description": "Get details of a run started by a cron job.",
                "operationId": "GET--api-cron-jobs-_cron_job_id_-runs-_run_id_-GetCronJobRun",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetCronJobRun API method succeeded and it returned an instance of grr.ApiCronJobRun.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJobRun"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetCronJobRun API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-decoded-blob/{decoder_name}/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get a decoded view of the specified file.",
                "operationId": "GET--api-clients-_client_id_-vfs-decoded-blob-_decoder_name_-_path-file_path_-GetDecodedFileBlob",
                "parameters": [
                    {
                        "name": "decoder_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetDecodedFileBlob API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetDecodedFileBlob API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/exported-results/{plugin_name}": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "Stream flow results using one of the instant output plugins.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-exported-results-_plugin_name_-GetExportedFlowResults",
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plugin_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetExportedFlowResults API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetExportedFlowResults API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/exported-results/{plugin_name}": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Stream hunt results using one of the instant output plugins.",
                "operationId": "GET--api-hunts-_hunt_id_-exported-results-_plugin_name_-GetExportedHuntResults",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plugin_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetExportedHuntResults API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetExportedHuntResults API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-blob/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get byte contents of a VFS file on a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-blob-_path-file_path_-GetFileBlob",
                "parameters": [
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileBlob API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileBlob API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-decoders/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get the decoder names that are applicable to the specified file.",
                "operationId": "GET--api-clients-_client_id_-vfs-decoders-_path-file_path_-GetFileDecoders",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileDecoders API method succeeded and it returned an instance of grr.ApiGetFileDecodersResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFileDecodersResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileDecoders API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-details/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get details of a VFS file on a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-details-_path-file_path_-GetFileDetails",
                "parameters": [
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileDetails API method succeeded and it returned an instance of grr.ApiGetFileDetailsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFileDetailsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileDetails API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-download-command/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get a command line that downloads given VFS file.",
                "operationId": "GET--api-clients-_client_id_-vfs-download-command-_path-file_path_-GetFileDownloadCommand",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileDownloadCommand API method succeeded and it returned an instance of grr.ApiGetFileDownloadCommandResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFileDownloadCommandResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileDownloadCommand API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-text/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get text file contents of a VFS file on a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-text-_path-file_path_-GetFileText",
                "parameters": [
                    {
                        "name": "length",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encoding",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetFileTextArgs.Encoding"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileText API method succeeded and it returned an instance of grr.ApiGetFileTextResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFileTextResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileText API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-version-times/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get available version times of a VFS file on a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-version-times-_path-file_path_-GetFileVersionTimes",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFileVersionTimes API method succeeded and it returned an instance of grr.ApiGetFileVersionTimesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFileVersionTimesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFileVersionTimes API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "Get flow details.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-GetFlow",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFlow API method succeeded and it returned an instance of grr.ApiFlow.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiFlow"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFlow API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/results/files-archive": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "Get ZIP or TAR.GZ archive with files downloaded by the flow.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-results-files-archive-GetFlowFilesArchive",
                "parameters": [
                    {
                        "name": "archive_format",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetFlowFilesArchiveArgs.ArchiveFormat"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFlowFilesArchive API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFlowFilesArchive API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/results/export-command": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "Get export tool command to export flow results.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-results-export-command-GetFlowResultsExportCommand",
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetFlowResultsExportCommand API method succeeded and it returned an instance of grr.ApiGetFlowResultsExportCommandResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetFlowResultsExportCommandResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetFlowResultsExportCommand API method did not succeed."
                    }
                }
            }
        },
        "/api/config/binaries/{type}/{path}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Get information about GRR binary with the following type and path.",
                "operationId": "GET--api-config-binaries-_type_-_path-path_-GetGrrBinary",
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGrrBinary.Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetGrrBinary API method succeeded and it returned an instance of grr.ApiGrrBinary.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGrrBinary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetGrrBinary API method did not succeed."
                    }
                }
            }
        },
        "/api/config/binaries-blobs/{type}/{path}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Get contents of a GRR binary (uploaded with grr_config_updater).",
                "operationId": "GET--api-config-binaries-blobs-_type_-_path-path_-GetGrrBinaryBlob",
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGrrBinary.Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetGrrBinaryBlob API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetGrrBinaryBlob API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get current user settings.",
                "operationId": "GET--api-users-me-GetGrrUser",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the GetGrrUser API method succeeded and it returned an instance of grr.ApiGrrUser.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGrrUser"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetGrrUser API method did not succeed."
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Update current user settings.",
                "operationId": "POST--api-users-me-UpdateGrrUser",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "settings": {
                                        "$ref": "#/components/schemas/grr.GUISettings"
                                    },
                                    "interface_traits": {
                                        "$ref": "#/components/schemas/grr.ApiGrrUserInterfaceTraits"
                                    },
                                    "user_type": {
                                        "$ref": "#/components/schemas/grr.ApiGrrUser.UserType"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the UpdateGrrUser API method succeeded."
                    },
                    "default": {
                        "description": "The call to the UpdateGrrUser API method did not succeed."
                    }
                }
            }
        },
        "/api/metadata/version": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "description": "Returns version of the GRR server.",
                "operationId": "GET--api-metadata-version-GetGrrVersion",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the GetGrrVersion API method succeeded and it returned an instance of grr.ApiGetGrrVersionResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetGrrVersionResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetGrrVersion API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/hunt/{hunt_id}/{approval_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get hunt approval identified by approval id, hunt id and username.",
                "operationId": "GET--api-users-_username_-approvals-hunt-_hunt_id_-_approval_id_-GetHuntApproval",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntApproval API method succeeded and it returned an instance of grr.ApiHuntApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHuntApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/client-completion-stats": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get hunt completion stats.",
                "operationId": "GET--api-hunts-_hunt_id_-client-completion-stats-GetHuntClientCompletionStats",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntClientCompletionStats API method succeeded and it returned an instance of grr.ApiGetHuntClientCompletionStatsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetHuntClientCompletionStatsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntClientCompletionStats API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/context": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get a low-level hunt context (useful for debugging).",
                "operationId": "GET--api-hunts-_hunt_id_-context-GetHuntContext",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntContext API method succeeded and it returned an instance of grr.ApiGetHuntContextResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetHuntContextResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntContext API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/results/clients/{client_id}/vfs-blob/{vfs_path}": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get a file referenced by one of the hunt results.",
                "operationId": "GET--api-hunts-_hunt_id_-results-clients-_client_id_-vfs-blob-_path-vfs_path_-GetHuntFile",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "vfs_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntFile API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntFile API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/results/files-archive": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get ZIP or TAR.GZ archive with all the files downloaded by the hunt.",
                "operationId": "GET--api-hunts-_hunt_id_-results-files-archive-GetHuntFilesArchive",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "archive_format",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetHuntFilesArchiveArgs.ArchiveFormat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntFilesArchive API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntFilesArchive API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/results/export-command": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get export command that exports hunt results.",
                "operationId": "GET--api-hunts-_hunt_id_-results-export-command-GetHuntResultsExportCommand",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntResultsExportCommand API method succeeded and it returned an instance of grr.ApiGetHuntResultsExportCommandResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetHuntResultsExportCommandResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntResultsExportCommand API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/stats": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "Get general hunt stats.",
                "operationId": "GET--api-hunts-_hunt_id_-stats-GetHuntStats",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetHuntStats API method succeeded and it returned an instance of grr.ApiGetHuntStatsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetHuntStatsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetHuntStats API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/actions/interrogate/{operation_id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Get state of a previously started interrogation.",
                "operationId": "GET--api-clients-_client_id_-actions-interrogate-_path-operation_id_-GetInterrogateOperationState",
                "parameters": [
                    {
                        "name": "operation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetInterrogateOperationState API method succeeded and it returned an instance of grr.ApiGetInterrogateOperationStateResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetInterrogateOperationStateResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetInterrogateOperationState API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/last-ip": {
            "get": {
                "tags": [
                    "NoCategory"
                ],
                "description": "Get last known client IP address.",
                "operationId": "GET--api-clients-_client_id_-last-ip-GetLastClientIPAddress",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetLastClientIPAddress API method succeeded and it returned an instance of grr.ApiGetLastClientIPAddressResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetLastClientIPAddressResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetLastClientIPAddress API method did not succeed."
                    }
                }
            }
        },
        "/api/metadata/openapi": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "description": "Returns a description of the API following the OpenAPI specification.",
                "operationId": "GET--api-metadata-openapi-GetOpenApiDescription",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the GetOpenApiDescription API method succeeded and it returned an instance of grr.ApiGetOpenApiDescriptionResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetOpenApiDescriptionResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetOpenApiDescription API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/notifications/pending/count": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get number of pending user notifications.",
                "operationId": "GET--api-users-me-notifications-pending-count-GetPendingUserNotificationsCount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the GetPendingUserNotificationsCount API method succeeded and it returned an instance of grr.ApiGetPendingUserNotificationsCountResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetPendingUserNotificationsCountResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetPendingUserNotificationsCount API method did not succeed."
                    }
                }
            }
        },
        "/api/reflection/rdfvalue/{type}": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "Get RDFValue descriptor for a given RDF type.",
                "operationId": "GET--api-reflection-rdfvalue-_type_-GetRDFValueDescriptor",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetRDFValueDescriptor API method succeeded and it returned an instance of grr.ApiRDFValueDescriptor.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiRDFValueDescriptor"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetRDFValueDescriptor API method did not succeed."
                    }
                }
            }
        },
        "/api/stats/reports/{name}": {
            "get": {
                "tags": [
                    "Other"
                ],
                "description": "Get data of a given report.",
                "operationId": "GET--api-stats-reports-_name_-GetReport",
                "parameters": [
                    {
                        "name": "duration",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "client_label",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetReport API method succeeded and it returned an instance of grr.ApiReport.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiReport"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetReport API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-update/{operation_id}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get state of a previously started content update operation.",
                "operationId": "GET--api-clients-_client_id_-vfs-update-_path-operation_id_-GetVfsFileContentUpdateState",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "operation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsFileContentUpdateState API method succeeded and it returned an instance of grr.ApiGetVfsFileContentUpdateStateResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetVfsFileContentUpdateStateResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsFileContentUpdateState API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-files-archive/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get archive with files collected and stored in the VFS of a client.",
                "operationId": "GET--api-clients-_client_id_-vfs-files-archive-_path-file_path_-GetVfsFilesArchive",
                "parameters": [
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsFilesArchive API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsFilesArchive API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-files-archive/": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get archive with files collected and stored in the VFS of a client.",
                "operationId": "GET--api-clients-_client_id_-vfs-files-archive--GetVfsFilesArchive",
                "parameters": [
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsFilesArchive API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsFilesArchive API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-refresh-operations/{operation_id}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get state of a previously started VFS refresh operation.",
                "operationId": "GET--api-clients-_client_id_-vfs-refresh-operations-_path-operation_id_-GetVfsRefreshOperationState",
                "parameters": [
                    {
                        "name": "operation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsRefreshOperationState API method succeeded and it returned an instance of grr.ApiGetVfsRefreshOperationStateResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetVfsRefreshOperationStateResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsRefreshOperationState API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-timeline/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get event timeline of VFS events for a given VFS path.",
                "operationId": "GET--api-clients-_client_id_-vfs-timeline-_path-file_path_-GetVfsTimeline",
                "parameters": [
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsTimeline API method succeeded and it returned an instance of grr.ApiGetVfsTimelineResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiGetVfsTimelineResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsTimeline API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-timeline-csv/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "Get event timeline of VFS evetns for a given VFS path in CSV format.",
                "operationId": "GET--api-clients-_client_id_-vfs-timeline-csv-_path-file_path_-GetVfsTimelineAsCsv",
                "parameters": [
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiGetVfsTimelineAsCsvArgs.Format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GetVfsTimelineAsCsv API method succeeded and it returned an instance of BinaryStream.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GetVfsTimelineAsCsv API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/client/{client_id}/{approval_id}/actions/grant": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Grant client approval.",
                "operationId": "POST--api-users-_username_-approvals-client-_client_id_-_approval_id_-actions-grant-GrantClientApproval",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GrantClientApproval API method succeeded and it returned an instance of grr.ApiClientApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiClientApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GrantClientApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/cron-job/{cron_job_id}/{approval_id}/actions/grant": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Grant cron job approval.",
                "operationId": "POST--api-users-_username_-approvals-cron-job-_cron_job_id_-_approval_id_-actions-grant-GrantCronJobApproval",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GrantCronJobApproval API method succeeded and it returned an instance of grr.ApiCronJobApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiCronJobApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GrantCronJobApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/users/{username}/approvals/hunt/{hunt_id}/{approval_id}/actions/grant": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Grant hunt approval.",
                "operationId": "POST--api-users-_username_-approvals-hunt-_hunt_id_-_approval_id_-actions-grant-GrantHuntApproval",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the GrantHuntApproval API method succeeded and it returned an instance of grr.ApiHuntApproval.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiHuntApproval"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the GrantHuntApproval API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/actions/interrogate": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "description": "Inititate client interrogation.",
                "operationId": "POST--api-clients-_client_id_-actions-interrogate-InterrogateClient",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the InterrogateClient API method succeeded and it returned an instance of grr.ApiInterrogateClientResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiInterrogateClientResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the InterrogateClient API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/notifications": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "List user notifications and mark them all as 'seen'.",
                "operationId": "POST--api-users-me-notifications-ListAndResetUserNotifications",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "offset": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "count": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "filter": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the ListAndResetUserNotifications API method succeeded and it returned an instance of grr.ApiListAndResetUserNotificationsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListAndResetUserNotificationsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListAndResetUserNotifications API method did not succeed."
                    }
                }
            }
        },
        "/api/reflection/api-methods": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List all available API methods.",
                "operationId": "GET--api-reflection-api-methods-ListApiMethods",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListApiMethods API method succeeded and it returned an instance of grr.ApiListApiMethodsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListApiMethodsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListApiMethods API method did not succeed."
                    }
                }
            }
        },
        "/api/users/approver-suggestions": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List suggestions for approver usernames.",
                "operationId": "GET--api-users-approver-suggestions-ListApproverSuggestions",
                "parameters": [
                    {
                        "name": "username_query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListApproverSuggestions API method succeeded and it returned an instance of grr.ApiListApproverSuggestionsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListApproverSuggestionsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListApproverSuggestions API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/action-requests": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "List pending action requests for a given client.",
                "operationId": "GET--api-clients-_client_id_-action-requests-ListClientActionRequests",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetch_responses",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListClientActionRequests API method succeeded and it returned an instance of grr.ApiListClientActionRequestsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListClientActionRequestsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListClientActionRequests API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/client": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List client approvals of a current user in reversed timestamp order.",
                "operationId": "GET--api-users-me-approvals-client-ListClientApprovals",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiListClientApprovalsArgs.State"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListClientApprovals API method succeeded and it returned an instance of grr.ApiListClientApprovalsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListClientApprovalsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListClientApprovals API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/crashes": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "List crashes of a given client.",
                "operationId": "GET--api-clients-_client_id_-crashes-ListClientCrashes",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListClientCrashes API method succeeded and it returned an instance of grr.ApiListClientCrashesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListClientCrashesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListClientCrashes API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/labels": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "List all available clients labels.",
                "operationId": "GET--api-clients-labels-ListClientsLabels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListClientsLabels API method succeeded and it returned an instance of grr.ApiListClientsLabelsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListClientsLabelsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListClientsLabels API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/cron-job": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List cron job approvals of a current user.",
                "operationId": "GET--api-users-me-approvals-cron-job-ListCronJobApprovals",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListCronJobApprovals API method succeeded and it returned an instance of grr.ApiListCronJobApprovalsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListCronJobApprovalsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListCronJobApprovals API method did not succeed."
                    }
                }
            }
        },
        "/api/cron-jobs/{cron_job_id}/runs": {
            "get": {
                "tags": [
                    "Cron"
                ],
                "description": "List runs initiated by the given cron job.",
                "operationId": "GET--api-cron-jobs-_cron_job_id_-runs-ListCronJobRuns",
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListCronJobRuns API method succeeded and it returned an instance of grr.ApiListCronJobRunsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListCronJobRunsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListCronJobRuns API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-index/{file_path}": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "List files in a given VFS directory of a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-index-_path-file_path_-ListFiles",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "directories_only",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFiles API method succeeded and it returned an instance of grr.ApiListFilesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFilesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFiles API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-index/": {
            "get": {
                "tags": [
                    "Vfs"
                ],
                "description": "List files in a given VFS directory of a given client.",
                "operationId": "GET--api-clients-_client_id_-vfs-index--ListFiles",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_path",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "directories_only",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFiles API method succeeded and it returned an instance of grr.ApiListFilesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFilesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFiles API method did not succeed."
                    }
                }
            }
        },
        "/api/flows/descriptors": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List descriptors of all the flows.",
                "operationId": "GET--api-flows-descriptors-ListFlowDescriptors",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowDescriptors API method succeeded and it returned an instance of grr.ApiListFlowDescriptorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowDescriptorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowDescriptors API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/log": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List logs of the flow.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-log-ListFlowLogs",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowLogs API method succeeded and it returned an instance of grr.ApiListFlowLogsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowLogsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowLogs API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/output-plugins/{plugin_id}/errors": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List output plugin errors of the flow.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-output-plugins-_plugin_id_-errors-ListFlowOutputPluginErrors",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "plugin_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowOutputPluginErrors API method succeeded and it returned an instance of grr.ApiListFlowOutputPluginErrorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowOutputPluginErrorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowOutputPluginErrors API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/output-plugins/{plugin_id}/logs": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List output plugin logs of the flow.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-output-plugins-_plugin_id_-logs-ListFlowOutputPluginLogs",
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plugin_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowOutputPluginLogs API method succeeded and it returned an instance of grr.ApiListFlowOutputPluginLogsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowOutputPluginLogsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowOutputPluginLogs API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/output-plugins": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List output plugins used by the flow.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-output-plugins-ListFlowOutputPlugins",
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowOutputPlugins API method succeeded and it returned an instance of grr.ApiListFlowOutputPluginsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowOutputPluginsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowOutputPlugins API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/requests": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List pending action requests of a given flow on a given client.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-requests-ListFlowRequests",
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowRequests API method succeeded and it returned an instance of grr.ApiListFlowRequestsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowRequestsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowRequests API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/flows/{flow_id}/results": {
            "get": {
                "tags": [
                    "Flows"
                ],
                "description": "List results of a given flow on a given client.",
                "operationId": "GET--api-clients-_client_id_-flows-_path-flow_id_-results-ListFlowResults",
                "parameters": [
                    {
                        "name": "with_tag",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListFlowResults API method succeeded and it returned an instance of grr.ApiListFlowResultsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListFlowResultsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListFlowResults API method did not succeed."
                    }
                }
            }
        },
        "/api/config/binaries": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "List available GRR binaries (uploaded with grr_config_updater).",
                "operationId": "GET--api-config-binaries-ListGrrBinaries",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListGrrBinaries API method succeeded and it returned an instance of grr.ApiListGrrBinariesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListGrrBinariesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListGrrBinaries API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/approvals/hunt": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List hunt approvals of a current user.",
                "operationId": "GET--api-users-me-approvals-hunt-ListHuntApprovals",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntApprovals API method succeeded and it returned an instance of grr.ApiListHuntApprovalsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntApprovalsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntApprovals API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/clients/{client_status}": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List clients involved into the hunt.",
                "operationId": "GET--api-hunts-_hunt_id_-clients-_client_status_-ListHuntClients",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/grr.ApiListHuntClientsArgs.ClientStatus"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntClients API method succeeded and it returned an instance of grr.ApiListHuntClientsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntClientsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntClients API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/crashes": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List all crashes caused by the hunt.",
                "operationId": "GET--api-hunts-_hunt_id_-crashes-ListHuntCrashes",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntCrashes API method succeeded and it returned an instance of grr.ApiListHuntCrashesResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntCrashesResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntCrashes API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/errors": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunt errors.",
                "operationId": "GET--api-hunts-_hunt_id_-errors-ListHuntErrors",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntErrors API method succeeded and it returned an instance of grr.ApiListHuntErrorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntErrorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntErrors API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/log": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunt logs.",
                "operationId": "GET--api-hunts-_hunt_id_-log-ListHuntLogs",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntLogs API method succeeded and it returned an instance of grr.ApiListHuntLogsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntLogsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntLogs API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/output-plugins/{plugin_id}/errors": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunt output plugins errors.",
                "operationId": "GET--api-hunts-_hunt_id_-output-plugins-_plugin_id_-errors-ListHuntOutputPluginErrors",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "plugin_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntOutputPluginErrors API method succeeded and it returned an instance of grr.ApiListHuntOutputPluginErrorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntOutputPluginErrorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntOutputPluginErrors API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/output-plugins/{plugin_id}/logs": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunt output plugins logs.",
                "operationId": "GET--api-hunts-_hunt_id_-output-plugins-_plugin_id_-logs-ListHuntOutputPluginLogs",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "plugin_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntOutputPluginLogs API method succeeded and it returned an instance of grr.ApiListHuntOutputPluginLogsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntOutputPluginLogsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntOutputPluginLogs API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/output-plugins": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List output plugins used by the hunt.",
                "operationId": "GET--api-hunts-_hunt_id_-output-plugins-ListHuntOutputPlugins",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntOutputPlugins API method succeeded and it returned an instance of grr.ApiListHuntOutputPluginsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntOutputPluginsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntOutputPlugins API method did not succeed."
                    }
                }
            }
        },
        "/api/hunts/{hunt_id}/results": {
            "get": {
                "tags": [
                    "Hunts"
                ],
                "description": "List hunt results.",
                "operationId": "GET--api-hunts-_hunt_id_-results-ListHuntResults",
                "parameters": [
                    {
                        "name": "hunt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListHuntResults API method succeeded and it returned an instance of grr.ApiListHuntResultsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListHuntResultsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListHuntResults API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/kb-fields": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List all available KnowledgeBase fields.",
                "operationId": "GET--api-clients-kb-fields-ListKbFields",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListKbFields API method succeeded and it returned an instance of grr.ApiListKbFieldsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListKbFieldsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListKbFields API method did not succeed."
                    }
                }
            }
        },
        "/api/reflection/file-encodings": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List all known encodings names.",
                "operationId": "GET--api-reflection-file-encodings-ListKnownEncodings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListKnownEncodings API method succeeded and it returned an instance of grr.ApiListKnownEncodingsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListKnownEncodingsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListKnownEncodings API method did not succeed."
                    }
                }
            }
        },
        "/api/output-plugins/all": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List all known output plugins descriptors.",
                "operationId": "GET--api-output-plugins-all-ListOutputPluginDescriptors",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListOutputPluginDescriptors API method succeeded and it returned an instance of grr.ApiListOutputPluginDescriptorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListOutputPluginDescriptorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListOutputPluginDescriptors API method did not succeed."
                    }
                }
            }
        },
        "/api/users/me/notifications/pending": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "List pending user notifications.",
                "operationId": "GET--api-users-me-notifications-pending-ListPendingUserNotifications",
                "parameters": [
                    {
                        "name": "timestamp",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the ListPendingUserNotifications API method succeeded and it returned an instance of grr.ApiListPendingUserNotificationsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListPendingUserNotificationsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListPendingUserNotifications API method did not succeed."
                    }
                }
            }
        },
        "/api/reflection/rdfvalue/all": {
            "get": {
                "tags": [
                    "Reflection"
                ],
                "description": "List all known RDF types descriptors.",
                "operationId": "GET--api-reflection-rdfvalue-all-ListRDFValuesDescriptors",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListRDFValuesDescriptors API method succeeded and it returned an instance of grr.ApiListRDFValueDescriptorsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListRDFValueDescriptorsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListRDFValuesDescriptors API method did not succeed."
                    }
                }
            }
        },
        "/api/stats/reports": {
            "get": {
                "tags": [
                    "Other"
                ],
                "description": "List available stats reports.",
                "operationId": "GET--api-stats-reports-ListReports",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The call to the ListReports API method succeeded and it returned an instance of grr.ApiListReportsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiListReportsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the ListReports API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/labels/remove": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "description": "Remove given labels from given clients.",
                "operationId": "POST--api-clients-labels-remove-RemoveClientsLabels",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "client_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the RemoveClientsLabels API method succeeded."
                    },
                    "default": {
                        "description": "The call to the RemoveClientsLabels API method did not succeed."
                    }
                }
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Search for clients using a search query.",
                "operationId": "GET--api-clients-SearchClients",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the SearchClients API method succeeded and it returned an instance of grr.ApiSearchClientsResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiSearchClientsResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the SearchClients API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/vfs-update": {
            "post": {
                "tags": [
                    "Vfs"
                ],
                "description": "Create request for a new snapshot of the file.",
                "operationId": "POST--api-clients-_client_id_-vfs-update-UpdateVfsFileContent",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file_path": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the UpdateVfsFileContent API method succeeded and it returned an instance of grr.ApiUpdateVfsFileContentResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiUpdateVfsFileContentResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the UpdateVfsFileContent API method did not succeed."
                    }
                }
            }
        },
        "/api/yara-signatures": {
            "post": {
                "tags": [
                    "Flows"
                ],
                "description": "No description.",
                "operationId": "POST--api-yara-signatures-UploadYaraSignature",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "signature": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The call to the UploadYaraSignature API method succeeded and it returned an instance of grr.ApiUploadYaraSignatureResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiUploadYaraSignatureResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the UploadYaraSignature API method did not succeed."
                    }
                }
            }
        },
        "/api/clients/{client_id}/access": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "description": "Verifies if user has access to a client.",
                "operationId": "GET--api-clients-_client_id_-access-VerifyAccess",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The call to the VerifyAccess API method succeeded and it returned an instance of grr.ApiVerifyAccessResult.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/grr.ApiVerifyAccessResult"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "The call to the VerifyAccess API method did not succeed."
                    }
                }
            }
        }
    }
}